{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DF\\\\Documents\\\\GitHub\\\\KoreaStreamerRanking\\\\korea-streamer-ranking\\\\src\\\\RankingList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport RankingListItem from './RankingListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RankingList() {\n  _s();\n\n  const [streamerData, setStreamerData] = useState([]);\n  const StreamerData = class StreamerData {\n    constructor(streamerName, accountName, rankName, ladderRank, totalWins, totalLosses) {\n      this.streamerName = \"\";\n      this.accountName = \"\";\n      this.rankName = \"\";\n      this.ladderRank = \"\";\n      this.totalWins = 0;\n      this.totalLosses = 0;\n      this.streamerName = streamerName;\n      this.accountName = accountName;\n      this.rankName = rankName;\n      this.ladderRank = ladderRank;\n      this.totalWins = totalWins;\n      this.totalLosses = totalLosses;\n    }\n\n  };\n  useEffect(() => {\n    // //to do: scrape account data from opgg for each streamer in STREAMERS\n    // scrapeData(STREAMERS);\n    // //for now some sample data:\n    // let exampleData = [new StreamerData(\"LolTyler1\", \"loltyler1\", \"Gold\", 1923898, 0, 200), new StreamerData(\"TF Blade\", \"TF Bladeee\", \"Challenger\", 1, 200, 200)];\n    // console.log(\"ecample data\", exampleData)\n    // let sortedExampleData = exampleData.sort((a, b) => { return a.ladderRank < b.ladderRank ? -1 : 1 });\n    // console.log(\"ecample data sorted\", sortedExampleData)\n    // setStreamerData(sortedExampleData);\n    getStreamerData();\n  }, []);\n\n  function getStreamerData() {\n    fetch(process.env.REACT_APP_BACKEND_URL + `/streamerData`).then(response => response.json()).then(data => {\n      console.log(\"sucessfully got streamer data\", data);\n      let newStreamerDataArray = [];\n      data.forEach(streamer => {\n        newStreamerDataArray.push(new StreamerData(streamer.streamerName, streamer.accountName, `${streamer.rankName} ${streamer.lp} LP`, streamer.ladderRank, streamer.totalWins, streamer.totalLosses));\n      });\n      setStreamerData(newStreamerDataArray);\n    }).catch(error => {\n      console.log(\"Error fetching streamer data.\", error);\n    }); //get data again every minute\n\n    setTimeout(() => {\n      getStreamerData();\n    }, 60000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"RankingList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"RankingListHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Streamer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"League Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Rank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 96\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Ladder Rank\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 111\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Wins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 133\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Losses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 148\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), streamerData.map((streamer, index) => {\n      return /*#__PURE__*/_jsxDEV(RankingListItem, {\n        listIndex: index + 1,\n        streamerName: streamer.streamerName,\n        accountName: streamer.accountName,\n        rankName: streamer.rankName,\n        ladderRank: streamer.ladderRank,\n        totalWins: streamer.totalWins,\n        totalLosses: streamer.totalLosses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RankingList, \"7Xy3PJNQf46VX6Jt1C73baErzUA=\");\n\n_c = RankingList;\nexport default RankingList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RankingList\");","map":{"version":3,"names":["React","useEffect","useState","RankingListItem","RankingList","streamerData","setStreamerData","StreamerData","constructor","streamerName","accountName","rankName","ladderRank","totalWins","totalLosses","getStreamerData","fetch","process","env","REACT_APP_BACKEND_URL","then","response","json","data","console","log","newStreamerDataArray","forEach","streamer","push","lp","catch","error","setTimeout","map","index"],"sources":["C:/Users/DF/Documents/GitHub/KoreaStreamerRanking/korea-streamer-ranking/src/RankingList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport RankingListItem from './RankingListItem';\r\n\r\nfunction RankingList() {\r\n\r\n    const [streamerData, setStreamerData] = useState([]);\r\n\r\n    const StreamerData = class {\r\n        streamerName = \"\";\r\n        accountName = \"\";\r\n        rankName = \"\";\r\n        ladderRank = \"\";\r\n        totalWins = 0;\r\n        totalLosses = 0;\r\n        constructor(streamerName, accountName, rankName, ladderRank, totalWins, totalLosses) {\r\n            this.streamerName = streamerName;\r\n            this.accountName = accountName;\r\n            this.rankName = rankName;\r\n            this.ladderRank = ladderRank;\r\n            this.totalWins = totalWins;\r\n            this.totalLosses = totalLosses;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // //to do: scrape account data from opgg for each streamer in STREAMERS\r\n        // scrapeData(STREAMERS);\r\n\r\n        // //for now some sample data:\r\n        // let exampleData = [new StreamerData(\"LolTyler1\", \"loltyler1\", \"Gold\", 1923898, 0, 200), new StreamerData(\"TF Blade\", \"TF Bladeee\", \"Challenger\", 1, 200, 200)];\r\n        // console.log(\"ecample data\", exampleData)\r\n        // let sortedExampleData = exampleData.sort((a, b) => { return a.ladderRank < b.ladderRank ? -1 : 1 });\r\n        // console.log(\"ecample data sorted\", sortedExampleData)\r\n        // setStreamerData(sortedExampleData);\r\n\r\n        getStreamerData();\r\n\r\n    }, []);\r\n\r\n    function getStreamerData() {\r\n        fetch(process.env.REACT_APP_BACKEND_URL + `/streamerData`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"sucessfully got streamer data\", data)\r\n                let newStreamerDataArray = [];\r\n                data.forEach(streamer => {\r\n                    newStreamerDataArray.push(new StreamerData(streamer.streamerName, streamer.accountName, `${streamer.rankName} ${streamer.lp} LP`, streamer.ladderRank, streamer.totalWins, streamer.totalLosses))\r\n                });\r\n                setStreamerData(newStreamerDataArray);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error fetching streamer data.\", error)\r\n            })\r\n\r\n        //get data again every minute\r\n        setTimeout(() => { getStreamerData() }, 60000)\r\n    }\r\n\r\n    return (\r\n        <div id=\"RankingList\">\r\n            <div id='RankingListHeader'><div></div><div>Streamer</div><div>League Account</div><div>Rank</div><div>Ladder Rank</div><div>Wins</div><div>Losses</div></div>\r\n            {\r\n                streamerData.map((streamer, index) => {\r\n                    return <RankingListItem listIndex={index + 1} streamerName={streamer.streamerName} accountName={streamer.accountName}\r\n                        rankName={streamer.rankName} ladderRank={streamer.ladderRank} totalWins={streamer.totalWins} totalLosses={streamer.totalLosses}></RankingListItem>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RankingList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}