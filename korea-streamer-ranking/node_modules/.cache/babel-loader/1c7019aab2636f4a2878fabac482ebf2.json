{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dialog = void 0;\n\nconst assert_js_1 = require(\"./assert.js\");\n/**\n * Dialog instances are dispatched by the {@link Page} via the `dialog` event.\n *\n * @remarks\n *\n * @example\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   page.on('dialog', async dialog => {\n *     console.log(dialog.message());\n *     await dialog.dismiss();\n *     await browser.close();\n *   });\n *   page.evaluate(() => alert('1'));\n * })();\n * ```\n * @public\n */\n\n\nclass Dialog {\n  /**\n   * @internal\n   */\n  constructor(client, type, message) {\n    let defaultValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    this._handled = false;\n    this._client = client;\n    this._type = type;\n    this._message = message;\n    this._defaultValue = defaultValue;\n  }\n  /**\n   * @returns The type of the dialog.\n   */\n\n\n  type() {\n    return this._type;\n  }\n  /**\n   * @returns The message displayed in the dialog.\n   */\n\n\n  message() {\n    return this._message;\n  }\n  /**\n   * @returns The default value of the prompt, or an empty string if the dialog\n   * is not a `prompt`.\n   */\n\n\n  defaultValue() {\n    return this._defaultValue;\n  }\n  /**\n   * @param promptText - optional text that will be entered in the dialog\n   * prompt. Has no effect if the dialog's type is not `prompt`.\n   *\n   * @returns A promise that resolves when the dialog has been accepted.\n   */\n\n\n  async accept(promptText) {\n    (0, assert_js_1.assert)(!this._handled, 'Cannot accept dialog which is already handled!');\n    this._handled = true;\n    await this._client.send('Page.handleJavaScriptDialog', {\n      accept: true,\n      promptText: promptText\n    });\n  }\n  /**\n   * @returns A promise which will resolve once the dialog has been dismissed\n   */\n\n\n  async dismiss() {\n    (0, assert_js_1.assert)(!this._handled, 'Cannot dismiss dialog which is already handled!');\n    this._handled = true;\n    await this._client.send('Page.handleJavaScriptDialog', {\n      accept: false\n    });\n  }\n\n}\n\nexports.Dialog = Dialog;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;AAgBA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,MAAaA,MAAb,CAAmB;EAOjB;;;EAGAC,YACEC,MADF,EAEEC,IAFF,EAGEC,OAHF,EAImB;IAAA,IAAjBC,YAAiB,uEAAF,EAAE;IATX,gBAAW,KAAX;IAWN,KAAKC,OAAL,GAAeJ,MAAf;IACA,KAAKK,KAAL,GAAaJ,IAAb;IACA,KAAKK,QAAL,GAAgBJ,OAAhB;IACA,KAAKK,aAAL,GAAqBJ,YAArB;EACD;EAED;;;;;EAGAF,IAAI;IACF,OAAO,KAAKI,KAAZ;EACD;EAED;;;;;EAGAH,OAAO;IACL,OAAO,KAAKI,QAAZ;EACD;EAED;;;;;;EAIAH,YAAY;IACV,OAAO,KAAKI,aAAZ;EACD;EAED;;;;;;;;EAMY,MAANC,MAAM,CAACC,UAAD,EAAoB;IAC9B,wBAAO,CAAC,KAAKC,QAAb,EAAuB,gDAAvB;IACA,KAAKA,QAAL,GAAgB,IAAhB;IACA,MAAM,KAAKN,OAAL,CAAaO,IAAb,CAAkB,6BAAlB,EAAiD;MACrDH,MAAM,EAAE,IAD6C;MAErDC,UAAU,EAAEA;IAFyC,CAAjD,CAAN;EAID;EAED;;;;;EAGa,MAAPG,OAAO;IACX,wBAAO,CAAC,KAAKF,QAAb,EAAuB,iDAAvB;IACA,KAAKA,QAAL,GAAgB,IAAhB;IACA,MAAM,KAAKN,OAAL,CAAaO,IAAb,CAAkB,6BAAlB,EAAiD;MACrDH,MAAM,EAAE;IAD6C,CAAjD,CAAN;EAGD;;AApEgB;;AAAnBK","names":["Dialog","constructor","client","type","message","defaultValue","_client","_type","_message","_defaultValue","accept","promptText","_handled","send","dismiss","exports"],"sources":["../../../../src/common/Dialog.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}