{"ast":null,"code":"import _createClass from\"C:/Users/DF/Documents/GitHub/KoreaStreamerRanking/korea-streamer-ranking/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _classCallCheck from\"C:/Users/DF/Documents/GitHub/KoreaStreamerRanking/korea-streamer-ranking/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _slicedToArray from\"C:/Users/DF/Documents/GitHub/KoreaStreamerRanking/korea-streamer-ranking/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import RankingListItem from'./RankingListItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RankingList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),streamerData=_useState2[0],setStreamerData=_useState2[1];var StreamerData=/*#__PURE__*/_createClass(function StreamerData(streamerName,accountName,rankName,ladderRank,totalWins,totalLosses){_classCallCheck(this,StreamerData);this.streamerName=\"\";this.accountName=\"\";this.rankName=\"\";this.ladderRank=\"\";this.totalWins=0;this.totalLosses=0;this.streamerName=streamerName;this.accountName=accountName;this.rankName=rankName;this.ladderRank=ladderRank;this.totalWins=totalWins;this.totalLosses=totalLosses;});useEffect(function(){// //to do: scrape account data from opgg for each streamer in STREAMERS\n// scrapeData(STREAMERS);\n// //for now some sample data:\n// let exampleData = [new StreamerData(\"LolTyler1\", \"loltyler1\", \"Gold\", 1923898, 0, 200), new StreamerData(\"TF Blade\", \"TF Bladeee\", \"Challenger\", 1, 200, 200)];\n// console.log(\"ecample data\", exampleData)\n// let sortedExampleData = exampleData.sort((a, b) => { return a.ladderRank < b.ladderRank ? -1 : 1 });\n// console.log(\"ecample data sorted\", sortedExampleData)\n// setStreamerData(sortedExampleData);\ngetStreamerData();},[]);function getStreamerData(){var result=null;fetch(\"https://api.codetabs.com/v1/proxy?quest=\"+process.env.REACT_APP_BACKEND_URL+\"/streamerData\").then(function(response){console.log(response);response.json();}).then(function(data){console.log(\"sucessfully got streamer data\",data);var newStreamerDataArray=[];data.forEach(function(streamer){newStreamerDataArray.push(new StreamerData(streamer.streamerName,streamer.accountName,\"\".concat(streamer.rankName,\" \").concat(streamer.lp,\" LP\"),streamer.ladderRank,streamer.totalWins,streamer.totalLosses));});setStreamerData(newStreamerDataArray);}).catch(function(error){console.log(\"Error fetching streamer data.\",error,data);});//get data again every minute\nsetTimeout(function(){getStreamerData();},60000);}return/*#__PURE__*/_jsxs(\"div\",{id:\"RankingList\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"RankingListHeader\",children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{children:\"Streamer\"}),/*#__PURE__*/_jsx(\"div\",{children:\"League Account\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Rank\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Ladder Rank\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Wins\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Losses\"})]}),/*#__PURE__*/_jsx(\"div\",{id:\"StreamerTable\",children:streamerData.sort(function(a,b){return a.ladderRank<b.ladderRank?-1:1;}).map(function(streamer,index){console.log(\"number \",index,\"streamer with ladder rank\",streamer.ladderRank);return/*#__PURE__*/_jsx(RankingListItem,{listIndex:index+1,streamerName:streamer.streamerName,accountName:streamer.accountName,rankName:streamer.rankName,ladderRank:streamer.ladderRank,totalWins:streamer.totalWins,totalLosses:streamer.totalLosses});})})]});}export default RankingList;","map":{"version":3,"names":["React","useEffect","useState","RankingListItem","RankingList","streamerData","setStreamerData","StreamerData","streamerName","accountName","rankName","ladderRank","totalWins","totalLosses","getStreamerData","result","fetch","process","env","REACT_APP_BACKEND_URL","then","response","console","log","json","data","newStreamerDataArray","forEach","streamer","push","lp","catch","error","setTimeout","sort","a","b","map","index"],"sources":["C:/Users/DF/Documents/GitHub/KoreaStreamerRanking/korea-streamer-ranking/src/RankingList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport RankingListItem from './RankingListItem';\r\n\r\nfunction RankingList() {\r\n\r\n    const [streamerData, setStreamerData] = useState([]);\r\n\r\n    const StreamerData = class {\r\n        streamerName = \"\";\r\n        accountName = \"\";\r\n        rankName = \"\";\r\n        ladderRank = \"\";\r\n        totalWins = 0;\r\n        totalLosses = 0;\r\n        constructor(streamerName, accountName, rankName, ladderRank, totalWins, totalLosses) {\r\n            this.streamerName = streamerName;\r\n            this.accountName = accountName;\r\n            this.rankName = rankName;\r\n            this.ladderRank = ladderRank;\r\n            this.totalWins = totalWins;\r\n            this.totalLosses = totalLosses;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // //to do: scrape account data from opgg for each streamer in STREAMERS\r\n        // scrapeData(STREAMERS);\r\n\r\n        // //for now some sample data:\r\n        // let exampleData = [new StreamerData(\"LolTyler1\", \"loltyler1\", \"Gold\", 1923898, 0, 200), new StreamerData(\"TF Blade\", \"TF Bladeee\", \"Challenger\", 1, 200, 200)];\r\n        // console.log(\"ecample data\", exampleData)\r\n        // let sortedExampleData = exampleData.sort((a, b) => { return a.ladderRank < b.ladderRank ? -1 : 1 });\r\n        // console.log(\"ecample data sorted\", sortedExampleData)\r\n        // setStreamerData(sortedExampleData);\r\n\r\n        getStreamerData();\r\n\r\n    }, []);\r\n\r\n    function getStreamerData() {\r\n        let result = null;\r\n        fetch(\"https://api.codetabs.com/v1/proxy?quest=\" + process.env.REACT_APP_BACKEND_URL + `/streamerData`)\r\n            .then(response => {console.log(response); response.json()})\r\n            .then(data => {\r\n                console.log(\"sucessfully got streamer data\", data)\r\n                let newStreamerDataArray = [];\r\n                data.forEach(streamer => {\r\n                    newStreamerDataArray.push(new StreamerData(streamer.streamerName, streamer.accountName, `${streamer.rankName} ${streamer.lp} LP`, streamer.ladderRank, streamer.totalWins, streamer.totalLosses))\r\n                });\r\n                setStreamerData(newStreamerDataArray);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error fetching streamer data.\", error, data)\r\n            })\r\n\r\n        //get data again every minute\r\n        setTimeout(() => { getStreamerData() }, 60000)\r\n    }\r\n\r\n    return (\r\n        <div id=\"RankingList\">\r\n            <div id='RankingListHeader'><div></div><div>Streamer</div><div>League Account</div><div>Rank</div><div>Ladder Rank</div><div>Wins</div><div>Losses</div></div>\r\n            <div id=\"StreamerTable\">\r\n                {\r\n                    streamerData.sort((a, b) => { return a.ladderRank < b.ladderRank ? -1 : 1 }).map((streamer, index) => {\r\n                        console.log(\"number \", index, \"streamer with ladder rank\", streamer.ladderRank)\r\n                        return <RankingListItem listIndex={index + 1} streamerName={streamer.streamerName} accountName={streamer.accountName}\r\n                            rankName={streamer.rankName} ladderRank={streamer.ladderRank} totalWins={streamer.totalWins} totalLosses={streamer.totalLosses}></RankingListItem>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RankingList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}