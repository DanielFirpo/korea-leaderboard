{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Page = void 0;\n\nconst EventEmitter_js_1 = require(\"./EventEmitter.js\");\n\nconst Connection_js_1 = require(\"./Connection.js\");\n\nconst Dialog_js_1 = require(\"./Dialog.js\");\n\nconst EmulationManager_js_1 = require(\"./EmulationManager.js\");\n\nconst FrameManager_js_1 = require(\"./FrameManager.js\");\n\nconst Input_js_1 = require(\"./Input.js\");\n\nconst Tracing_js_1 = require(\"./Tracing.js\");\n\nconst assert_js_1 = require(\"./assert.js\");\n\nconst helper_js_1 = require(\"./helper.js\");\n\nconst Coverage_js_1 = require(\"./Coverage.js\");\n\nconst WebWorker_js_1 = require(\"./WebWorker.js\");\n\nconst JSHandle_js_1 = require(\"./JSHandle.js\");\n\nconst NetworkManager_js_1 = require(\"./NetworkManager.js\");\n\nconst Accessibility_js_1 = require(\"./Accessibility.js\");\n\nconst TimeoutSettings_js_1 = require(\"./TimeoutSettings.js\");\n\nconst FileChooser_js_1 = require(\"./FileChooser.js\");\n\nconst ConsoleMessage_js_1 = require(\"./ConsoleMessage.js\");\n\nconst PDFOptions_js_1 = require(\"./PDFOptions.js\");\n\nconst environment_js_1 = require(\"../environment.js\");\n/**\n * Page provides methods to interact with a single tab or\n * {@link https://developer.chrome.com/extensions/background_pages | extension background page} in Chromium.\n *\n * @remarks\n *\n * One Browser instance might have multiple Page instances.\n *\n * @example\n * This example creates a page, navigates it to a URL, and then * saves a screenshot:\n * ```js\n * const puppeteer = require('puppeteer');\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await page.screenshot({path: 'screenshot.png'});\n *   await browser.close();\n * })();\n * ```\n *\n * The Page class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link PageEmittedEvents} enum.\n *\n * @example\n * This example logs a message for a single page `load` event:\n * ```js\n * page.once('load', () => console.log('Page loaded!'));\n * ```\n *\n * To unsubscribe from events use the `off` method:\n *\n * ```js\n * function logRequest(interceptedRequest) {\n *   console.log('A request was made:', interceptedRequest.url());\n * }\n * page.on('request', logRequest);\n * // Sometime later...\n * page.off('request', logRequest);\n * ```\n * @public\n */\n\n\nclass Page extends EventEmitter_js_1.EventEmitter {\n  /**\n   * @internal\n   */\n  constructor(client, target, ignoreHTTPSErrors, screenshotTaskQueue) {\n    super();\n    this._closed = false;\n    this._timeoutSettings = new TimeoutSettings_js_1.TimeoutSettings();\n    this._pageBindings = new Map();\n    this._javascriptEnabled = true;\n    this._workers = new Map(); // TODO: improve this typedef - it's a function that takes a file chooser or\n    // something?\n\n    this._fileChooserInterceptors = new Set();\n    this._userDragInterceptionEnabled = false;\n    this._handlerMap = new WeakMap();\n    this._client = client;\n    this._target = target;\n    this._keyboard = new Input_js_1.Keyboard(client);\n    this._mouse = new Input_js_1.Mouse(client, this._keyboard);\n    this._touchscreen = new Input_js_1.Touchscreen(client, this._keyboard);\n    this._accessibility = new Accessibility_js_1.Accessibility(client);\n    this._frameManager = new FrameManager_js_1.FrameManager(client, this, ignoreHTTPSErrors, this._timeoutSettings);\n    this._emulationManager = new EmulationManager_js_1.EmulationManager(client);\n    this._tracing = new Tracing_js_1.Tracing(client);\n    this._coverage = new Coverage_js_1.Coverage(client);\n    this._screenshotTaskQueue = screenshotTaskQueue;\n    this._viewport = null;\n    client.on('Target.attachedToTarget', event => {\n      if (event.targetInfo.type !== 'worker' && event.targetInfo.type !== 'iframe') {\n        // If we don't detach from service workers, they will never die.\n        // We still want to attach to workers for emitting events.\n        // We still want to attach to iframes so sessions may interact with them.\n        // We detach from all other types out of an abundance of caution.\n        // See https://source.chromium.org/chromium/chromium/src/+/main:content/browser/devtools/devtools_agent_host_impl.cc?ss=chromium&q=f:devtools%20-f:out%20%22::kTypePage%5B%5D%22\n        // for the complete list of available types.\n        client.send('Target.detachFromTarget', {\n          sessionId: event.sessionId\n        }).catch(helper_js_1.debugError);\n        return;\n      }\n\n      if (event.targetInfo.type === 'worker') {\n        const session = Connection_js_1.Connection.fromSession(client).session(event.sessionId);\n        const worker = new WebWorker_js_1.WebWorker(session, event.targetInfo.url, this._addConsoleMessage.bind(this), this._handleException.bind(this));\n\n        this._workers.set(event.sessionId, worker);\n\n        this.emit(\"workercreated\"\n        /* WorkerCreated */\n        , worker);\n      }\n    });\n    client.on('Target.detachedFromTarget', event => {\n      const worker = this._workers.get(event.sessionId);\n\n      if (!worker) return;\n\n      this._workers.delete(event.sessionId);\n\n      this.emit(\"workerdestroyed\"\n      /* WorkerDestroyed */\n      , worker);\n    });\n\n    this._frameManager.on(FrameManager_js_1.FrameManagerEmittedEvents.FrameAttached, event => this.emit(\"frameattached\"\n    /* FrameAttached */\n    , event));\n\n    this._frameManager.on(FrameManager_js_1.FrameManagerEmittedEvents.FrameDetached, event => this.emit(\"framedetached\"\n    /* FrameDetached */\n    , event));\n\n    this._frameManager.on(FrameManager_js_1.FrameManagerEmittedEvents.FrameNavigated, event => this.emit(\"framenavigated\"\n    /* FrameNavigated */\n    , event));\n\n    const networkManager = this._frameManager.networkManager();\n\n    networkManager.on(NetworkManager_js_1.NetworkManagerEmittedEvents.Request, event => this.emit(\"request\"\n    /* Request */\n    , event));\n    networkManager.on(NetworkManager_js_1.NetworkManagerEmittedEvents.RequestServedFromCache, event => this.emit(\"requestservedfromcache\"\n    /* RequestServedFromCache */\n    , event));\n    networkManager.on(NetworkManager_js_1.NetworkManagerEmittedEvents.Response, event => this.emit(\"response\"\n    /* Response */\n    , event));\n    networkManager.on(NetworkManager_js_1.NetworkManagerEmittedEvents.RequestFailed, event => this.emit(\"requestfailed\"\n    /* RequestFailed */\n    , event));\n    networkManager.on(NetworkManager_js_1.NetworkManagerEmittedEvents.RequestFinished, event => this.emit(\"requestfinished\"\n    /* RequestFinished */\n    , event));\n    this._fileChooserInterceptors = new Set();\n    client.on('Page.domContentEventFired', () => this.emit(\"domcontentloaded\"\n    /* DOMContentLoaded */\n    ));\n    client.on('Page.loadEventFired', () => this.emit(\"load\"\n    /* Load */\n    ));\n    client.on('Runtime.consoleAPICalled', event => this._onConsoleAPI(event));\n    client.on('Runtime.bindingCalled', event => this._onBindingCalled(event));\n    client.on('Page.javascriptDialogOpening', event => this._onDialog(event));\n    client.on('Runtime.exceptionThrown', exception => this._handleException(exception.exceptionDetails));\n    client.on('Inspector.targetCrashed', () => this._onTargetCrashed());\n    client.on('Performance.metrics', event => this._emitMetrics(event));\n    client.on('Log.entryAdded', event => this._onLogEntryAdded(event));\n    client.on('Page.fileChooserOpened', event => this._onFileChooser(event));\n\n    this._target._isClosedPromise.then(() => {\n      this.emit(\"close\"\n      /* Close */\n      );\n      this._closed = true;\n    });\n  }\n  /**\n   * @internal\n   */\n\n\n  static async create(client, target, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue) {\n    const page = new Page(client, target, ignoreHTTPSErrors, screenshotTaskQueue);\n    await page._initialize();\n    if (defaultViewport) await page.setViewport(defaultViewport);\n    return page;\n  }\n\n  async _initialize() {\n    await Promise.all([this._frameManager.initialize(), this._client.send('Target.setAutoAttach', {\n      autoAttach: true,\n      waitForDebuggerOnStart: false,\n      flatten: true\n    }), this._client.send('Performance.enable'), this._client.send('Log.enable')]);\n  }\n\n  async _onFileChooser(event) {\n    if (!this._fileChooserInterceptors.size) return;\n\n    const frame = this._frameManager.frame(event.frameId);\n\n    const context = await frame.executionContext();\n    const element = await context._adoptBackendNodeId(event.backendNodeId);\n    const interceptors = Array.from(this._fileChooserInterceptors);\n\n    this._fileChooserInterceptors.clear();\n\n    const fileChooser = new FileChooser_js_1.FileChooser(element, event);\n\n    for (const interceptor of interceptors) interceptor.call(null, fileChooser);\n  }\n  /**\n   * @returns `true` if drag events are being intercepted, `false` otherwise.\n   */\n\n\n  isDragInterceptionEnabled() {\n    return this._userDragInterceptionEnabled;\n  }\n  /**\n   * @returns `true` if the page has JavaScript enabled, `false` otherwise.\n   */\n\n\n  isJavaScriptEnabled() {\n    return this._javascriptEnabled;\n  }\n  /**\n   * Listen to page events.\n   */\n  // Note: this method exists to define event typings and handle\n  // proper wireup of cooperative request interception. Actual event listening and\n  // dispatching is delegated to EventEmitter.\n\n\n  on(eventName, handler) {\n    if (eventName === 'request') {\n      const wrap = event => {\n        event.enqueueInterceptAction(() => handler(event));\n      };\n\n      this._handlerMap.set(handler, wrap);\n\n      return super.on(eventName, wrap);\n    }\n\n    return super.on(eventName, handler);\n  }\n\n  once(eventName, handler) {\n    // Note: this method only exists to define the types; we delegate the impl\n    // to EventEmitter.\n    return super.once(eventName, handler);\n  }\n\n  off(eventName, handler) {\n    if (eventName === 'request') {\n      handler = this._handlerMap.get(handler) || handler;\n    }\n\n    return super.off(eventName, handler);\n  }\n  /**\n   * This method is typically coupled with an action that triggers file\n   * choosing. The following example clicks a button that issues a file chooser\n   * and then responds with `/tmp/myfile.pdf` as if a user has selected this file.\n   *\n   * ```js\n   * const [fileChooser] = await Promise.all([\n   * page.waitForFileChooser(),\n   * page.click('#upload-file-button'),\n   * // some button that triggers file selection\n   * ]);\n   * await fileChooser.accept(['/tmp/myfile.pdf']);\n   * ```\n   *\n   * NOTE: This must be called before the file chooser is launched. It will not\n   * return a currently active file chooser.\n   * @param options - Optional waiting parameters\n   * @returns Resolves after a page requests a file picker.\n   * @remarks\n   * NOTE: In non-headless Chromium, this method results in the native file picker\n   * dialog `not showing up` for the user.\n   */\n\n\n  async waitForFileChooser() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this._fileChooserInterceptors.size) await this._client.send('Page.setInterceptFileChooserDialog', {\n      enabled: true\n    });\n    const {\n      timeout = this._timeoutSettings.timeout()\n    } = options;\n    let callback;\n    const promise = new Promise(x => callback = x);\n\n    this._fileChooserInterceptors.add(callback);\n\n    return helper_js_1.helper.waitWithTimeout(promise, 'waiting for file chooser', timeout).catch(error => {\n      this._fileChooserInterceptors.delete(callback);\n\n      throw error;\n    });\n  }\n  /**\n   * Sets the page's geolocation.\n   * @remarks\n   * NOTE: Consider using {@link BrowserContext.overridePermissions} to grant\n   * permissions for the page to read its geolocation.\n   * @example\n   * ```js\n   * await page.setGeolocation({latitude: 59.95, longitude: 30.31667});\n   * ```\n   */\n\n\n  async setGeolocation(options) {\n    const {\n      longitude,\n      latitude,\n      accuracy = 0\n    } = options;\n    if (longitude < -180 || longitude > 180) throw new Error(`Invalid longitude \"${longitude}\": precondition -180 <= LONGITUDE <= 180 failed.`);\n    if (latitude < -90 || latitude > 90) throw new Error(`Invalid latitude \"${latitude}\": precondition -90 <= LATITUDE <= 90 failed.`);\n    if (accuracy < 0) throw new Error(`Invalid accuracy \"${accuracy}\": precondition 0 <= ACCURACY failed.`);\n    await this._client.send('Emulation.setGeolocationOverride', {\n      longitude,\n      latitude,\n      accuracy\n    });\n  }\n  /**\n   * @returns A target this page was created from.\n   */\n\n\n  target() {\n    return this._target;\n  }\n  /**\n   * Get the CDP session client the page belongs to.\n   * @internal\n   */\n\n\n  client() {\n    return this._client;\n  }\n  /**\n   * Get the browser the page belongs to.\n   */\n\n\n  browser() {\n    return this._target.browser();\n  }\n  /**\n   * Get the browser context that the page belongs to.\n   */\n\n\n  browserContext() {\n    return this._target.browserContext();\n  }\n\n  _onTargetCrashed() {\n    this.emit('error', new Error('Page crashed!'));\n  }\n\n  _onLogEntryAdded(event) {\n    const {\n      level,\n      text,\n      args,\n      source,\n      url,\n      lineNumber\n    } = event.entry;\n    if (args) args.map(arg => helper_js_1.helper.releaseObject(this._client, arg));\n    if (source !== 'worker') this.emit(\"console\"\n    /* Console */\n    , new ConsoleMessage_js_1.ConsoleMessage(level, text, [], [{\n      url,\n      lineNumber\n    }]));\n  }\n  /**\n   * @returns The page's main frame.\n   * @remarks\n   * Page is guaranteed to have a main frame which persists during navigations.\n   */\n\n\n  mainFrame() {\n    return this._frameManager.mainFrame();\n  }\n\n  get keyboard() {\n    return this._keyboard;\n  }\n\n  get touchscreen() {\n    return this._touchscreen;\n  }\n\n  get coverage() {\n    return this._coverage;\n  }\n\n  get tracing() {\n    return this._tracing;\n  }\n\n  get accessibility() {\n    return this._accessibility;\n  }\n  /**\n   * @returns An array of all frames attached to the page.\n   */\n\n\n  frames() {\n    return this._frameManager.frames();\n  }\n  /**\n   * @returns all of the dedicated\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API |\n   * WebWorkers}\n   * associated with the page.\n   * @remarks\n   * NOTE: This does not contain ServiceWorkers\n   */\n\n\n  workers() {\n    return Array.from(this._workers.values());\n  }\n  /**\n   * @param value - Whether to enable request interception.\n   *\n   * @remarks\n   * Activating request interception enables {@link HTTPRequest.abort},\n   * {@link HTTPRequest.continue} and {@link HTTPRequest.respond} methods.  This\n   * provides the capability to modify network requests that are made by a page.\n   *\n   * Once request interception is enabled, every request will stall unless it's\n   * continued, responded or aborted; or completed using the browser cache.\n   *\n   * @example\n   * An example of a naïve request interceptor that aborts all image requests:\n   * ```js\n   * const puppeteer = require('puppeteer');\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.setRequestInterception(true);\n   *   page.on('request', interceptedRequest => {\n   *     if (interceptedRequest.url().endsWith('.png') ||\n   *         interceptedRequest.url().endsWith('.jpg'))\n   *       interceptedRequest.abort();\n   *     else\n   *       interceptedRequest.continue();\n   *     });\n   *   await page.goto('https://example.com');\n   *   await browser.close();\n   * })();\n   * ```\n   * NOTE: Enabling request interception disables page caching.\n   */\n\n\n  async setRequestInterception(value) {\n    return this._frameManager.networkManager().setRequestInterception(value);\n  }\n  /**\n   * @param enabled - Whether to enable drag interception.\n   *\n   * @remarks\n   * Activating drag interception enables the `Input.drag`,\n   * methods  This provides the capability to capture drag events emitted\n   * on the page, which can then be used to simulate drag-and-drop.\n   */\n\n\n  async setDragInterception(enabled) {\n    this._userDragInterceptionEnabled = enabled;\n    return this._client.send('Input.setInterceptDrags', {\n      enabled\n    });\n  }\n  /**\n   * @param enabled - When `true`, enables offline mode for the page.\n   * @remarks\n   * NOTE: while this method sets the network connection to offline, it does\n   * not change the parameters used in [page.emulateNetworkConditions(networkConditions)]\n   * (#pageemulatenetworkconditionsnetworkconditions)\n   */\n\n\n  setOfflineMode(enabled) {\n    return this._frameManager.networkManager().setOfflineMode(enabled);\n  }\n  /**\n   * @param networkConditions - Passing `null` disables network condition emulation.\n   * @example\n   * ```js\n   * const puppeteer = require('puppeteer');\n   * const slow3G = puppeteer.networkConditions['Slow 3G'];\n   *\n   * (async () => {\n   * const browser = await puppeteer.launch();\n   * const page = await browser.newPage();\n   * await page.emulateNetworkConditions(slow3G);\n   * await page.goto('https://www.google.com');\n   * // other actions...\n   * await browser.close();\n   * })();\n   * ```\n   * @remarks\n   * NOTE: This does not affect WebSockets and WebRTC PeerConnections (see\n   * https://crbug.com/563644). To set the page offline, you can use\n   * [page.setOfflineMode(enabled)](#pagesetofflinemodeenabled).\n   */\n\n\n  emulateNetworkConditions(networkConditions) {\n    return this._frameManager.networkManager().emulateNetworkConditions(networkConditions);\n  }\n  /**\n   * This setting will change the default maximum navigation time for the\n   * following methods and related shortcuts:\n   *\n   * - {@link Page.goBack | page.goBack(options)}\n   *\n   * - {@link Page.goForward | page.goForward(options)}\n   *\n   * - {@link Page.goto | page.goto(url,options)}\n   *\n   * - {@link Page.reload | page.reload(options)}\n   *\n   * - {@link Page.setContent | page.setContent(html,options)}\n   *\n   * - {@link Page.waitForNavigation | page.waitForNavigation(options)}\n   * @param timeout - Maximum navigation time in milliseconds.\n   */\n\n\n  setDefaultNavigationTimeout(timeout) {\n    this._timeoutSettings.setDefaultNavigationTimeout(timeout);\n  }\n  /**\n   * @param timeout - Maximum time in milliseconds.\n   */\n\n\n  setDefaultTimeout(timeout) {\n    this._timeoutSettings.setDefaultTimeout(timeout);\n  }\n  /**\n   * Runs `document.querySelector` within the page. If no element matches the\n   * selector, the return value resolves to `null`.\n   *\n   * @remarks\n   * Shortcut for {@link Frame.$ | Page.mainFrame().$(selector) }.\n   *\n   * @param selector - A `selector` to query page for\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to query page for.\n   */\n\n\n  async $(selector) {\n    return this.mainFrame().$(selector);\n  }\n  /**\n   * @remarks\n   *\n   * The only difference between {@link Page.evaluate | page.evaluate} and\n   * `page.evaluateHandle` is that `evaluateHandle` will return the value\n   * wrapped in an in-page object.\n   *\n   * If the function passed to `page.evaluteHandle` returns a Promise, the\n   * function will wait for the promise to resolve and return its value.\n   *\n   * You can pass a string instead of a function (although functions are\n   * recommended as they are easier to debug and use with TypeScript):\n   *\n   * @example\n   * ```\n   * const aHandle = await page.evaluateHandle('document')\n   * ```\n   *\n   * @example\n   * {@link JSHandle} instances can be passed as arguments to the `pageFunction`:\n   * ```\n   * const aHandle = await page.evaluateHandle(() => document.body);\n   * const resultHandle = await page.evaluateHandle(body => body.innerHTML, aHandle);\n   * console.log(await resultHandle.jsonValue());\n   * await resultHandle.dispose();\n   * ```\n   *\n   * Most of the time this function returns a {@link JSHandle},\n   * but if `pageFunction` returns a reference to an element,\n   * you instead get an {@link ElementHandle} back:\n   *\n   * @example\n   * ```\n   * const button = await page.evaluateHandle(() => document.querySelector('button'));\n   * // can call `click` because `button` is an `ElementHandle`\n   * await button.click();\n   * ```\n   *\n   * The TypeScript definitions assume that `evaluateHandle` returns\n   *  a `JSHandle`, but if you know it's going to return an\n   * `ElementHandle`, pass it as the generic argument:\n   *\n   * ```\n   * const button = await page.evaluateHandle<ElementHandle>(...);\n   * ```\n   *\n   * @param pageFunction - a function that is run within the page\n   * @param args - arguments to be passed to the pageFunction\n   */\n\n\n  async evaluateHandle(pageFunction) {\n    const context = await this.mainFrame().executionContext();\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return context.evaluateHandle(pageFunction, ...args);\n  }\n  /**\n   * This method iterates the JavaScript heap and finds all objects with the\n   * given prototype.\n   *\n   * @remarks\n   * Shortcut for\n   * {@link ExecutionContext.queryObjects |\n   * page.mainFrame().executionContext().queryObjects(prototypeHandle)}.\n   *\n   * @example\n   *\n   * ```js\n   * // Create a Map object\n   * await page.evaluate(() => window.map = new Map());\n   * // Get a handle to the Map object prototype\n   * const mapPrototype = await page.evaluateHandle(() => Map.prototype);\n   * // Query all map instances into an array\n   * const mapInstances = await page.queryObjects(mapPrototype);\n   * // Count amount of map objects in heap\n   * const count = await page.evaluate(maps => maps.length, mapInstances);\n   * await mapInstances.dispose();\n   * await mapPrototype.dispose();\n   * ```\n   * @param prototypeHandle - a handle to the object prototype.\n   * @returns Promise which resolves to a handle to an array of objects with\n   * this prototype.\n   */\n\n\n  async queryObjects(prototypeHandle) {\n    const context = await this.mainFrame().executionContext();\n    return context.queryObjects(prototypeHandle);\n  }\n  /**\n   * This method runs `document.querySelector` within the page and passes the\n   * result as the first argument to the `pageFunction`.\n   *\n   * @remarks\n   *\n   * If no element is found matching `selector`, the method will throw an error.\n   *\n   * If `pageFunction` returns a promise `$eval` will wait for the promise to\n   * resolve and then return its value.\n   *\n   * @example\n   *\n   * ```\n   * const searchValue = await page.$eval('#search', el => el.value);\n   * const preloadHref = await page.$eval('link[rel=preload]', el => el.href);\n   * const html = await page.$eval('.main-container', el => el.outerHTML);\n   * ```\n   *\n   * If you are using TypeScript, you may have to provide an explicit type to the\n   * first argument of the `pageFunction`.\n   * By default it is typed as `Element`, but you may need to provide a more\n   * specific sub-type:\n   *\n   * @example\n   *\n   * ```\n   * // if you don't provide HTMLInputElement here, TS will error\n   * // as `value` is not on `Element`\n   * const searchValue = await page.$eval('#search', (el: HTMLInputElement) => el.value);\n   * ```\n   *\n   * The compiler should be able to infer the return type\n   * from the `pageFunction` you provide. If it is unable to, you can use the generic\n   * type to tell the compiler what return type you expect from `$eval`:\n   *\n   * @example\n   *\n   * ```\n   * // The compiler can infer the return type in this case, but if it can't\n   * // or if you want to be more explicit, provide it as the generic type.\n   * const searchValue = await page.$eval<string>(\n   *  '#search', (el: HTMLInputElement) => el.value\n   * );\n   * ```\n   *\n   * @param selector - the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to query for\n   * @param pageFunction - the function to be evaluated in the page context.\n   * Will be passed the result of `document.querySelector(selector)` as its\n   * first argument.\n   * @param args - any additional arguments to pass through to `pageFunction`.\n   *\n   * @returns The result of calling `pageFunction`. If it returns an element it\n   * is wrapped in an {@link ElementHandle}, else the raw value itself is\n   * returned.\n   */\n\n\n  async $eval(selector, pageFunction) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    return this.mainFrame().$eval(selector, pageFunction, ...args);\n  }\n  /**\n   * This method runs `Array.from(document.querySelectorAll(selector))` within\n   * the page and passes the result as the first argument to the `pageFunction`.\n   *\n   * @remarks\n   *\n   * If `pageFunction` returns a promise `$$eval` will wait for the promise to\n   * resolve and then return its value.\n   *\n   * @example\n   *\n   * ```\n   * // get the amount of divs on the page\n   * const divCount = await page.$$eval('div', divs => divs.length);\n   *\n   * // get the text content of all the `.options` elements:\n   * const options = await page.$$eval('div > span.options', options => {\n   *   return options.map(option => option.textContent)\n   * });\n   * ```\n   *\n   * If you are using TypeScript, you may have to provide an explicit type to the\n   * first argument of the `pageFunction`.\n   * By default it is typed as `Element[]`, but you may need to provide a more\n   * specific sub-type:\n   *\n   * @example\n   *\n   * ```\n   * // if you don't provide HTMLInputElement here, TS will error\n   * // as `value` is not on `Element`\n   * await page.$$eval('input', (elements: HTMLInputElement[]) => {\n   *   return elements.map(e => e.value);\n   * });\n   * ```\n   *\n   * The compiler should be able to infer the return type\n   * from the `pageFunction` you provide. If it is unable to, you can use the generic\n   * type to tell the compiler what return type you expect from `$$eval`:\n   *\n   * @example\n   *\n   * ```\n   * // The compiler can infer the return type in this case, but if it can't\n   * // or if you want to be more explicit, provide it as the generic type.\n   * const allInputValues = await page.$$eval<string[]>(\n   *  'input', (elements: HTMLInputElement[]) => elements.map(e => e.textContent)\n   * );\n   * ```\n   *\n   * @param selector - the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to query for\n   * @param pageFunction - the function to be evaluated in the page context. Will\n   * be passed the result of `Array.from(document.querySelectorAll(selector))`\n   * as its first argument.\n   * @param args - any additional arguments to pass through to `pageFunction`.\n   *\n   * @returns The result of calling `pageFunction`. If it returns an element it\n   * is wrapped in an {@link ElementHandle}, else the raw value itself is\n   * returned.\n   */\n\n\n  async $$eval(selector, pageFunction) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      args[_key3 - 2] = arguments[_key3];\n    }\n\n    return this.mainFrame().$$eval(selector, pageFunction, ...args);\n  }\n  /**\n   * The method runs `document.querySelectorAll` within the page. If no elements\n   * match the selector, the return value resolves to `[]`.\n   * @remarks\n   * Shortcut for {@link Frame.$$ | Page.mainFrame().$$(selector) }.\n   * @param selector - A `selector` to query page for\n   */\n\n\n  async $$(selector) {\n    return this.mainFrame().$$(selector);\n  }\n  /**\n   * The method evaluates the XPath expression relative to the page document as\n   * its context node. If there are no such elements, the method resolves to an\n   * empty array.\n   * @remarks\n   * Shortcut for {@link Frame.$x | Page.mainFrame().$x(expression) }.\n   * @param expression - Expression to evaluate\n   */\n\n\n  async $x(expression) {\n    return this.mainFrame().$x(expression);\n  }\n  /**\n   * If no URLs are specified, this method returns cookies for the current page\n   * URL. If URLs are specified, only cookies for those URLs are returned.\n   */\n\n\n  async cookies() {\n    for (var _len4 = arguments.length, urls = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      urls[_key4] = arguments[_key4];\n    }\n\n    const originalCookies = (await this._client.send('Network.getCookies', {\n      urls: urls.length ? urls : [this.url()]\n    })).cookies;\n    const unsupportedCookieAttributes = ['priority'];\n\n    const filterUnsupportedAttributes = cookie => {\n      for (const attr of unsupportedCookieAttributes) delete cookie[attr];\n\n      return cookie;\n    };\n\n    return originalCookies.map(filterUnsupportedAttributes);\n  }\n\n  async deleteCookie() {\n    const pageURL = this.url();\n\n    for (var _len5 = arguments.length, cookies = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      cookies[_key5] = arguments[_key5];\n    }\n\n    for (const cookie of cookies) {\n      const item = Object.assign({}, cookie);\n      if (!cookie.url && pageURL.startsWith('http')) item.url = pageURL;\n      await this._client.send('Network.deleteCookies', item);\n    }\n  }\n  /**\n   * @example\n   * ```js\n   * await page.setCookie(cookieObject1, cookieObject2);\n   * ```\n   */\n\n\n  async setCookie() {\n    const pageURL = this.url();\n    const startsWithHTTP = pageURL.startsWith('http');\n\n    for (var _len6 = arguments.length, cookies = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      cookies[_key6] = arguments[_key6];\n    }\n\n    const items = cookies.map(cookie => {\n      const item = Object.assign({}, cookie);\n      if (!item.url && startsWithHTTP) item.url = pageURL;\n      (0, assert_js_1.assert)(item.url !== 'about:blank', `Blank page can not have cookie \"${item.name}\"`);\n      (0, assert_js_1.assert)(!String.prototype.startsWith.call(item.url || '', 'data:'), `Data URL page can not have cookie \"${item.name}\"`);\n      return item;\n    });\n    await this.deleteCookie(...items);\n    if (items.length) await this._client.send('Network.setCookies', {\n      cookies: items\n    });\n  }\n  /**\n   * Adds a `<script>` tag into the page with the desired URL or content.\n   * @remarks\n   * Shortcut for {@link Frame.addScriptTag | page.mainFrame().addScriptTag(options) }.\n   * @returns Promise which resolves to the added tag when the script's onload fires or\n   * when the script content was injected into frame.\n   */\n\n\n  async addScriptTag(options) {\n    return this.mainFrame().addScriptTag(options);\n  }\n  /**\n   * Adds a `<link rel=\"stylesheet\">` tag into the page with the desired URL or a\n   * `<style type=\"text/css\">` tag with the content.\n   * @returns Promise which resolves to the added tag when the stylesheet's\n   * onload fires or when the CSS content was injected into frame.\n   */\n\n\n  async addStyleTag(options) {\n    return this.mainFrame().addStyleTag(options);\n  }\n  /**\n   * The method adds a function called `name` on the page's `window` object. When\n   * called, the function executes `puppeteerFunction` in node.js and returns a\n   * `Promise` which resolves to the return value of `puppeteerFunction`.\n   *\n   * If the puppeteerFunction returns a `Promise`, it will be awaited.\n   *\n   * NOTE: Functions installed via `page.exposeFunction` survive navigations.\n   * @param name - Name of the function on the window object\n   * @param puppeteerFunction -  Callback function which will be called in\n   * Puppeteer's context.\n   * @example\n   * An example of adding an `md5` function into the page:\n   * ```js\n   * const puppeteer = require('puppeteer');\n   * const crypto = require('crypto');\n   *\n   * (async () => {\n   * const browser = await puppeteer.launch();\n   * const page = await browser.newPage();\n   * page.on('console', (msg) => console.log(msg.text()));\n   * await page.exposeFunction('md5', (text) =>\n   * crypto.createHash('md5').update(text).digest('hex')\n   * );\n   * await page.evaluate(async () => {\n   * // use window.md5 to compute hashes\n   * const myString = 'PUPPETEER';\n   * const myHash = await window.md5(myString);\n   * console.log(`md5 of ${myString} is ${myHash}`);\n   * });\n   * await browser.close();\n   * })();\n   * ```\n   * An example of adding a `window.readfile` function into the page:\n   * ```js\n   * const puppeteer = require('puppeteer');\n   * const fs = require('fs');\n   *\n   * (async () => {\n   * const browser = await puppeteer.launch();\n   * const page = await browser.newPage();\n   * page.on('console', (msg) => console.log(msg.text()));\n   * await page.exposeFunction('readfile', async (filePath) => {\n   * return new Promise((resolve, reject) => {\n   * fs.readFile(filePath, 'utf8', (err, text) => {\n   *    if (err) reject(err);\n   *    else resolve(text);\n   *  });\n   * });\n   * });\n   * await page.evaluate(async () => {\n   * // use window.readfile to read contents of a file\n   * const content = await window.readfile('/etc/hosts');\n   * console.log(content);\n   * });\n   * await browser.close();\n   * })();\n   * ```\n   */\n\n\n  async exposeFunction(name, puppeteerFunction) {\n    if (this._pageBindings.has(name)) throw new Error(`Failed to add page binding with name ${name}: window['${name}'] already exists!`);\n    let exposedFunction;\n\n    if (typeof puppeteerFunction === 'function') {\n      exposedFunction = puppeteerFunction;\n    } else if (typeof puppeteerFunction.default === 'function') {\n      exposedFunction = puppeteerFunction.default;\n    } else {\n      throw new Error(`Failed to add page binding with name ${name}: ${puppeteerFunction} is not a function or a module with a default export.`);\n    }\n\n    this._pageBindings.set(name, exposedFunction);\n\n    const expression = helper_js_1.helper.pageBindingInitString('exposedFun', name);\n    await this._client.send('Runtime.addBinding', {\n      name: name\n    });\n    await this._client.send('Page.addScriptToEvaluateOnNewDocument', {\n      source: expression\n    });\n    await Promise.all(this.frames().map(frame => frame.evaluate(expression).catch(helper_js_1.debugError)));\n  }\n  /**\n   * Provide credentials for `HTTP authentication`.\n   * @remarks To disable authentication, pass `null`.\n   */\n\n\n  async authenticate(credentials) {\n    return this._frameManager.networkManager().authenticate(credentials);\n  }\n  /**\n   * The extra HTTP headers will be sent with every request the page initiates.\n   * NOTE: All HTTP header names are lowercased. (HTTP headers are\n   * case-insensitive, so this shouldn’t impact your server code.)\n   * NOTE: page.setExtraHTTPHeaders does not guarantee the order of headers in\n   * the outgoing requests.\n   * @param headers - An object containing additional HTTP headers to be sent\n   * with every request. All header values must be strings.\n   * @returns\n   */\n\n\n  async setExtraHTTPHeaders(headers) {\n    return this._frameManager.networkManager().setExtraHTTPHeaders(headers);\n  }\n  /**\n   * @param userAgent - Specific user agent to use in this page\n   * @param userAgentData - Specific user agent client hint data to use in this\n   * page\n   * @returns Promise which resolves when the user agent is set.\n   */\n\n\n  async setUserAgent(userAgent, userAgentMetadata) {\n    return this._frameManager.networkManager().setUserAgent(userAgent, userAgentMetadata);\n  }\n  /**\n   * @returns Object containing metrics as key/value pairs.\n   *\n   * - `Timestamp` : The timestamp when the metrics sample was taken.\n   *\n   * - `Documents` : Number of documents in the page.\n   *\n   * - `Frames` : Number of frames in the page.\n   *\n   * - `JSEventListeners` : Number of events in the page.\n   *\n   * - `Nodes` : Number of DOM nodes in the page.\n   *\n   * - `LayoutCount` : Total number of full or partial page layout.\n   *\n   * - `RecalcStyleCount` : Total number of page style recalculations.\n   *\n   * - `LayoutDuration` : Combined durations of all page layouts.\n   *\n   * - `RecalcStyleDuration` : Combined duration of all page style\n   *   recalculations.\n   *\n   * - `ScriptDuration` : Combined duration of JavaScript execution.\n   *\n   * - `TaskDuration` : Combined duration of all tasks performed by the browser.\n   *\n   *\n   * - `JSHeapUsedSize` : Used JavaScript heap size.\n   *\n   * - `JSHeapTotalSize` : Total JavaScript heap size.\n   * @remarks\n   * NOTE: All timestamps are in monotonic time: monotonically increasing time\n   * in seconds since an arbitrary point in the past.\n   */\n\n\n  async metrics() {\n    const response = await this._client.send('Performance.getMetrics');\n    return this._buildMetricsObject(response.metrics);\n  }\n\n  _emitMetrics(event) {\n    this.emit(\"metrics\"\n    /* Metrics */\n    , {\n      title: event.title,\n      metrics: this._buildMetricsObject(event.metrics)\n    });\n  }\n\n  _buildMetricsObject(metrics) {\n    const result = {};\n\n    for (const metric of metrics || []) {\n      if (supportedMetrics.has(metric.name)) result[metric.name] = metric.value;\n    }\n\n    return result;\n  }\n\n  _handleException(exceptionDetails) {\n    const message = helper_js_1.helper.getExceptionMessage(exceptionDetails);\n    const err = new Error(message);\n    err.stack = ''; // Don't report clientside error with a node stack attached\n\n    this.emit(\"pageerror\"\n    /* PageError */\n    , err);\n  }\n\n  async _onConsoleAPI(event) {\n    if (event.executionContextId === 0) {\n      // DevTools protocol stores the last 1000 console messages. These\n      // messages are always reported even for removed execution contexts. In\n      // this case, they are marked with executionContextId = 0 and are\n      // reported upon enabling Runtime agent.\n      //\n      // Ignore these messages since:\n      // - there's no execution context we can use to operate with message\n      //   arguments\n      // - these messages are reported before Puppeteer clients can subscribe\n      //   to the 'console'\n      //   page event.\n      //\n      // @see https://github.com/puppeteer/puppeteer/issues/3865\n      return;\n    }\n\n    const context = this._frameManager.executionContextById(event.executionContextId, this._client);\n\n    const values = event.args.map(arg => (0, JSHandle_js_1.createJSHandle)(context, arg));\n\n    this._addConsoleMessage(event.type, values, event.stackTrace);\n  }\n\n  async _onBindingCalled(event) {\n    let payload;\n\n    try {\n      payload = JSON.parse(event.payload);\n    } catch {\n      // The binding was either called by something in the page or it was\n      // called before our wrapper was initialized.\n      return;\n    }\n\n    const {\n      type,\n      name,\n      seq,\n      args\n    } = payload;\n    if (type !== 'exposedFun' || !this._pageBindings.has(name)) return;\n    let expression = null;\n\n    try {\n      const result = await this._pageBindings.get(name)(...args);\n      expression = helper_js_1.helper.pageBindingDeliverResultString(name, seq, result);\n    } catch (error) {\n      if (error instanceof Error) expression = helper_js_1.helper.pageBindingDeliverErrorString(name, seq, error.message, error.stack);else expression = helper_js_1.helper.pageBindingDeliverErrorValueString(name, seq, error);\n    }\n\n    this._client.send('Runtime.evaluate', {\n      expression,\n      contextId: event.executionContextId\n    }).catch(helper_js_1.debugError);\n  }\n\n  _addConsoleMessage(type, args, stackTrace) {\n    if (!this.listenerCount(\"console\"\n    /* Console */\n    )) {\n      args.forEach(arg => arg.dispose());\n      return;\n    }\n\n    const textTokens = [];\n\n    for (const arg of args) {\n      const remoteObject = arg._remoteObject;\n      if (remoteObject.objectId) textTokens.push(arg.toString());else textTokens.push(helper_js_1.helper.valueFromRemoteObject(remoteObject));\n    }\n\n    const stackTraceLocations = [];\n\n    if (stackTrace) {\n      for (const callFrame of stackTrace.callFrames) {\n        stackTraceLocations.push({\n          url: callFrame.url,\n          lineNumber: callFrame.lineNumber,\n          columnNumber: callFrame.columnNumber\n        });\n      }\n    }\n\n    const message = new ConsoleMessage_js_1.ConsoleMessage(type, textTokens.join(' '), args, stackTraceLocations);\n    this.emit(\"console\"\n    /* Console */\n    , message);\n  }\n\n  _onDialog(event) {\n    let dialogType = null;\n    const validDialogTypes = new Set(['alert', 'confirm', 'prompt', 'beforeunload']);\n\n    if (validDialogTypes.has(event.type)) {\n      dialogType = event.type;\n    }\n\n    (0, assert_js_1.assert)(dialogType, 'Unknown javascript dialog type: ' + event.type);\n    const dialog = new Dialog_js_1.Dialog(this._client, dialogType, event.message, event.defaultPrompt);\n    this.emit(\"dialog\"\n    /* Dialog */\n    , dialog);\n  }\n  /**\n   * Resets default white background\n   */\n\n\n  async _resetDefaultBackgroundColor() {\n    await this._client.send('Emulation.setDefaultBackgroundColorOverride');\n  }\n  /**\n   * Hides default white background\n   */\n\n\n  async _setTransparentBackgroundColor() {\n    await this._client.send('Emulation.setDefaultBackgroundColorOverride', {\n      color: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0\n      }\n    });\n  }\n  /**\n   *\n   * @returns\n   * @remarks Shortcut for\n   * {@link Frame.url | page.mainFrame().url()}.\n   */\n\n\n  url() {\n    return this.mainFrame().url();\n  }\n\n  async content() {\n    return await this._frameManager.mainFrame().content();\n  }\n  /**\n   * @param html - HTML markup to assign to the page.\n   * @param options - Parameters that has some properties.\n   * @remarks\n   * The parameter `options` might have the following options.\n   *\n   * - `timeout` : Maximum time in milliseconds for resources to load, defaults\n   *   to 30 seconds, pass `0` to disable timeout. The default value can be\n   *   changed by using the\n   *   {@link Page.setDefaultNavigationTimeout |\n   *   page.setDefaultNavigationTimeout(timeout)}\n   *   or {@link Page.setDefaultTimeout | page.setDefaultTimeout(timeout)}\n   *   methods.\n   *\n   * - `waitUntil`: When to consider setting markup succeeded, defaults to `load`.\n   *    Given an array of event strings, setting content is considered to be\n   *    successful after all events have been fired. Events can be either:<br/>\n   *  - `load` : consider setting content to be finished when the `load` event is\n   *    fired.<br/>\n   *  - `domcontentloaded` : consider setting content to be finished when the\n   *   `DOMContentLoaded` event is fired.<br/>\n   *  - `networkidle0` : consider setting content to be finished when there are no\n   *   more than 0 network connections for at least `500` ms.<br/>\n   *  - `networkidle2` : consider setting content to be finished when there are no\n   *   more than 2 network connections for at least `500` ms.\n   */\n\n\n  async setContent(html) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    await this._frameManager.mainFrame().setContent(html, options);\n  }\n  /**\n   * @param url - URL to navigate page to. The URL should include scheme, e.g.\n   * `https://`\n   * @param options - Navigation Parameter\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect.\n   * @remarks\n   * The argument `options` might have the following properties:\n   *\n   * - `timeout` : Maximum navigation time in milliseconds, defaults to 30\n   *   seconds, pass 0 to disable timeout. The default value can be changed by\n   *   using the\n   *   {@link Page.setDefaultNavigationTimeout |\n   *   page.setDefaultNavigationTimeout(timeout)}\n   *   or {@link Page.setDefaultTimeout | page.setDefaultTimeout(timeout)}\n   *   methods.\n   *\n   * - `waitUntil`:When to consider navigation succeeded, defaults to `load`.\n   *    Given an array of event strings, navigation is considered to be successful\n   *    after all events have been fired. Events can be either:<br/>\n   *  - `load` : consider navigation to be finished when the load event is\n   *    fired.<br/>\n   *  - `domcontentloaded` : consider navigation to be finished when the\n   *    DOMContentLoaded event is fired.<br/>\n   *  - `networkidle0` : consider navigation to be finished when there are no\n   *    more than 0 network connections for at least `500` ms.<br/>\n   *  - `networkidle2` : consider navigation to be finished when there are no\n   *    more than 2 network connections for at least `500` ms.\n   *\n   * - `referer` : Referer header value. If provided it will take preference\n   *   over the referer header value set by\n   *   {@link Page.setExtraHTTPHeaders |page.setExtraHTTPHeaders()}.\n   *\n   * `page.goto` will throw an error if:\n   * - there's an SSL error (e.g. in case of self-signed certificates).\n   * - target URL is invalid.\n   * - the timeout is exceeded during navigation.\n   * - the remote server does not respond or is unreachable.\n   * - the main resource failed to load.\n   *\n   * `page.goto` will not throw an error when any valid HTTP status code is\n   *   returned by the remote server, including 404 \"Not Found\" and 500\n   *   \"Internal Server Error\". The status code for such responses can be\n   *   retrieved by calling response.status().\n   *\n   * NOTE: `page.goto` either throws an error or returns a main resource\n   * response. The only exceptions are navigation to about:blank or navigation\n   * to the same URL with a different hash, which would succeed and return null.\n   *\n   * NOTE: Headless mode doesn't support navigation to a PDF document. See the\n   * {@link https://bugs.chromium.org/p/chromium/issues/detail?id=761295\n   * | upstream issue}.\n   *\n   * Shortcut for {@link Frame.goto | page.mainFrame().goto(url, options)}.\n   */\n\n\n  async goto(url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return await this._frameManager.mainFrame().goto(url, options);\n  }\n  /**\n   * @param options - Navigation parameters which might have the following\n   * properties:\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect.\n   * @remarks\n   * The argument `options` might have the following properties:\n   *\n   * - `timeout` : Maximum navigation time in milliseconds, defaults to 30\n   *   seconds, pass 0 to disable timeout. The default value can be changed by\n   *   using the\n   *   {@link Page.setDefaultNavigationTimeout |\n   *   page.setDefaultNavigationTimeout(timeout)}\n   *   or {@link Page.setDefaultTimeout | page.setDefaultTimeout(timeout)}\n   *   methods.\n   *\n   * - `waitUntil`: When to consider navigation succeeded, defaults to `load`.\n   *    Given an array of event strings, navigation is considered to be\n   *    successful after all events have been fired. Events can be either:<br/>\n   *  - `load` : consider navigation to be finished when the load event is fired.<br/>\n   *  - `domcontentloaded` : consider navigation to be finished when the\n   *   DOMContentLoaded event is fired.<br/>\n   *  - `networkidle0` : consider navigation to be finished when there are no\n   *   more than 0 network connections for at least `500` ms.<br/>\n   *  - `networkidle2` : consider navigation to be finished when there are no\n   *   more than 2 network connections for at least `500` ms.\n   */\n\n\n  async reload(options) {\n    const result = await Promise.all([this.waitForNavigation(options), this._client.send('Page.reload')]);\n    return result[0];\n  }\n  /**\n   * This resolves when the page navigates to a new URL or reloads. It is useful\n   * when you run code that will indirectly cause the page to navigate. Consider\n   * this example:\n   * ```js\n   * const [response] = await Promise.all([\n   * page.waitForNavigation(), // The promise resolves after navigation has finished\n   * page.click('a.my-link'), // Clicking the link will indirectly cause a navigation\n   * ]);\n   * ```\n   *\n   * @param options - Navigation parameters which might have the following properties:\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect. In case of navigation to a different anchor or navigation\n   * due to History API usage, the navigation will resolve with `null`.\n   * @remarks\n   * NOTE: Usage of the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/History_API | History API}\n   * to change the URL is considered a navigation.\n   *\n   * Shortcut for\n   * {@link Frame.waitForNavigation | page.mainFrame().waitForNavigation(options)}.\n   */\n\n\n  async waitForNavigation() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return await this._frameManager.mainFrame().waitForNavigation(options);\n  }\n\n  _sessionClosePromise() {\n    if (!this._disconnectPromise) this._disconnectPromise = new Promise(fulfill => this._client.once(Connection_js_1.CDPSessionEmittedEvents.Disconnected, () => fulfill(new Error('Target closed'))));\n    return this._disconnectPromise;\n  }\n  /**\n   * @param urlOrPredicate - A URL or predicate to wait for\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves to the matched response\n   * @example\n   * ```js\n   * const firstResponse = await page.waitForResponse(\n   * 'https://example.com/resource'\n   * );\n   * const finalResponse = await page.waitForResponse(\n   * (response) =>\n   * response.url() === 'https://example.com' && response.status() === 200\n   * );\n   * const finalResponse = await page.waitForResponse(async (response) => {\n   * return (await response.text()).includes('<html>');\n   * });\n   * return finalResponse.ok();\n   * ```\n   * @remarks\n   * Optional Waiting Parameters have:\n   *\n   * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds, pass\n   * `0` to disable the timeout. The default value can be changed by using the\n   * {@link Page.setDefaultTimeout} method.\n   */\n\n\n  async waitForRequest(urlOrPredicate) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      timeout = this._timeoutSettings.timeout()\n    } = options;\n    return helper_js_1.helper.waitForEvent(this._frameManager.networkManager(), NetworkManager_js_1.NetworkManagerEmittedEvents.Request, request => {\n      if (helper_js_1.helper.isString(urlOrPredicate)) return urlOrPredicate === request.url();\n      if (typeof urlOrPredicate === 'function') return !!urlOrPredicate(request);\n      return false;\n    }, timeout, this._sessionClosePromise());\n  }\n  /**\n   * @param urlOrPredicate - A URL or predicate to wait for.\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves to the matched response.\n   * @example\n   * ```js\n   * const firstResponse = await page.waitForResponse(\n   * 'https://example.com/resource'\n   * );\n   * const finalResponse = await page.waitForResponse(\n   * (response) =>\n   * response.url() === 'https://example.com' && response.status() === 200\n   * );\n   * const finalResponse = await page.waitForResponse(async (response) => {\n   * return (await response.text()).includes('<html>');\n   * });\n   * return finalResponse.ok();\n   * ```\n   * @remarks\n   * Optional Parameter have:\n   *\n   * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds,\n   * pass `0` to disable the timeout. The default value can be changed by using\n   * the {@link Page.setDefaultTimeout} method.\n   */\n\n\n  async waitForResponse(urlOrPredicate) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      timeout = this._timeoutSettings.timeout()\n    } = options;\n    return helper_js_1.helper.waitForEvent(this._frameManager.networkManager(), NetworkManager_js_1.NetworkManagerEmittedEvents.Response, async response => {\n      if (helper_js_1.helper.isString(urlOrPredicate)) return urlOrPredicate === response.url();\n      if (typeof urlOrPredicate === 'function') return !!(await urlOrPredicate(response));\n      return false;\n    }, timeout, this._sessionClosePromise());\n  }\n  /**\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves when network is idle\n   */\n\n\n  async waitForNetworkIdle() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      idleTime = 500,\n      timeout = this._timeoutSettings.timeout()\n    } = options;\n\n    const networkManager = this._frameManager.networkManager();\n\n    let idleResolveCallback;\n    const idlePromise = new Promise(resolve => {\n      idleResolveCallback = resolve;\n    });\n    let abortRejectCallback;\n    const abortPromise = new Promise((_, reject) => {\n      abortRejectCallback = reject;\n    });\n    let idleTimer;\n\n    const onIdle = () => idleResolveCallback();\n\n    const cleanup = () => {\n      idleTimer && clearTimeout(idleTimer);\n      abortRejectCallback(new Error('abort'));\n    };\n\n    const evaluate = () => {\n      idleTimer && clearTimeout(idleTimer);\n      if (networkManager.numRequestsInProgress() === 0) idleTimer = setTimeout(onIdle, idleTime);\n    };\n\n    evaluate();\n\n    const eventHandler = () => {\n      evaluate();\n      return false;\n    };\n\n    const listenToEvent = event => helper_js_1.helper.waitForEvent(networkManager, event, eventHandler, timeout, abortPromise);\n\n    const eventPromises = [listenToEvent(NetworkManager_js_1.NetworkManagerEmittedEvents.Request), listenToEvent(NetworkManager_js_1.NetworkManagerEmittedEvents.Response)];\n    await Promise.race([idlePromise, ...eventPromises, this._sessionClosePromise()]).then(r => {\n      cleanup();\n      return r;\n    }, error => {\n      cleanup();\n      throw error;\n    });\n  }\n  /**\n   * @param urlOrPredicate - A URL or predicate to wait for.\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves to the matched frame.\n   * @example\n   * ```js\n   * const frame = await page.waitForFrame(async (frame) => {\n   *   return frame.name() === 'Test';\n   * });\n   * ```\n   * @remarks\n   * Optional Parameter have:\n   *\n   * - `timeout`: Maximum wait time in milliseconds, defaults to `30` seconds,\n   * pass `0` to disable the timeout. The default value can be changed by using\n   * the {@link Page.setDefaultTimeout} method.\n   */\n\n\n  async waitForFrame(urlOrPredicate) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      timeout = this._timeoutSettings.timeout()\n    } = options;\n\n    async function predicate(frame) {\n      if (helper_js_1.helper.isString(urlOrPredicate)) return urlOrPredicate === frame.url();\n      if (typeof urlOrPredicate === 'function') return !!(await urlOrPredicate(frame));\n      return false;\n    }\n\n    const eventRace = Promise.race([helper_js_1.helper.waitForEvent(this._frameManager, FrameManager_js_1.FrameManagerEmittedEvents.FrameAttached, predicate, timeout, this._sessionClosePromise()), helper_js_1.helper.waitForEvent(this._frameManager, FrameManager_js_1.FrameManagerEmittedEvents.FrameNavigated, predicate, timeout, this._sessionClosePromise())]);\n    return Promise.race([eventRace, (async () => {\n      for (const frame of this.frames()) {\n        if (await predicate(frame)) {\n          return frame;\n        }\n      }\n\n      await eventRace;\n    })()]);\n  }\n  /**\n   * This method navigate to the previous page in history.\n   * @param options - Navigation parameters\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect. If can not go back, resolves to `null`.\n   * @remarks\n   * The argument `options` might have the following properties:\n   *\n   * - `timeout` : Maximum navigation time in milliseconds, defaults to 30\n   *   seconds, pass 0 to disable timeout. The default value can be changed by\n   *   using the\n   *   {@link Page.setDefaultNavigationTimeout\n   *   | page.setDefaultNavigationTimeout(timeout)}\n   *   or {@link Page.setDefaultTimeout | page.setDefaultTimeout(timeout)}\n   *   methods.\n   *\n   * - `waitUntil` : When to consider navigation succeeded, defaults to `load`.\n   *    Given an array of event strings, navigation is considered to be\n   *    successful after all events have been fired. Events can be either:<br/>\n   *  - `load` : consider navigation to be finished when the load event is fired.<br/>\n   *  - `domcontentloaded` : consider navigation to be finished when the\n   *   DOMContentLoaded event is fired.<br/>\n   *  - `networkidle0` : consider navigation to be finished when there are no\n   *   more than 0 network connections for at least `500` ms.<br/>\n   *  - `networkidle2` : consider navigation to be finished when there are no\n   *   more than 2 network connections for at least `500` ms.\n   */\n\n\n  async goBack() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this._go(-1, options);\n  }\n  /**\n   * This method navigate to the next page in history.\n   * @param options - Navigation Parameter\n   * @returns Promise which resolves to the main resource response. In case of\n   * multiple redirects, the navigation will resolve with the response of the\n   * last redirect. If can not go forward, resolves to `null`.\n   * @remarks\n   * The argument `options` might have the following properties:\n   *\n   * - `timeout` : Maximum navigation time in milliseconds, defaults to 30\n   *   seconds, pass 0 to disable timeout. The default value can be changed by\n   *   using the\n   *   {@link Page.setDefaultNavigationTimeout\n   *   | page.setDefaultNavigationTimeout(timeout)}\n   *   or {@link Page.setDefaultTimeout | page.setDefaultTimeout(timeout)}\n   *   methods.\n   *\n   * - `waitUntil`: When to consider navigation succeeded, defaults to `load`.\n   *    Given an array of event strings, navigation is considered to be\n   *    successful after all events have been fired. Events can be either:<br/>\n   *  - `load` : consider navigation to be finished when the load event is fired.<br/>\n   *  - `domcontentloaded` : consider navigation to be finished when the\n   *   DOMContentLoaded event is fired.<br/>\n   *  - `networkidle0` : consider navigation to be finished when there are no\n   *   more than 0 network connections for at least `500` ms.<br/>\n   *  - `networkidle2` : consider navigation to be finished when there are no\n   *   more than 2 network connections for at least `500` ms.\n   */\n\n\n  async goForward() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return this._go(+1, options);\n  }\n\n  async _go(delta, options) {\n    const history = await this._client.send('Page.getNavigationHistory');\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry) return null;\n    const result = await Promise.all([this.waitForNavigation(options), this._client.send('Page.navigateToHistoryEntry', {\n      entryId: entry.id\n    })]);\n    return result[0];\n  }\n  /**\n   * Brings page to front (activates tab).\n   */\n\n\n  async bringToFront() {\n    await this._client.send('Page.bringToFront');\n  }\n  /**\n   * Emulates given device metrics and user agent. This method is a shortcut for\n   * calling two methods: {@link Page.setUserAgent} and {@link Page.setViewport}\n   * To aid emulation, Puppeteer provides a list of device descriptors that can\n   * be obtained via the {@link Puppeteer.devices} `page.emulate` will resize\n   * the page. A lot of websites don't expect phones to change size, so you\n   * should emulate before navigating to the page.\n   * @example\n   * ```js\n   * const puppeteer = require('puppeteer');\n   * const iPhone = puppeteer.devices['iPhone 6'];\n   * (async () => {\n   * const browser = await puppeteer.launch();\n   * const page = await browser.newPage();\n   * await page.emulate(iPhone);\n   * await page.goto('https://www.google.com');\n   * // other actions...\n   * await browser.close();\n   * })();\n   * ```\n   * @remarks List of all available devices is available in the source code:\n   * {@link https://github.com/puppeteer/puppeteer/blob/main/src/common/DeviceDescriptors.ts | src/common/DeviceDescriptors.ts}.\n   */\n\n\n  async emulate(options) {\n    await Promise.all([this.setViewport(options.viewport), this.setUserAgent(options.userAgent)]);\n  }\n  /**\n   * @param enabled - Whether or not to enable JavaScript on the page.\n   * @returns\n   * @remarks\n   * NOTE: changing this value won't affect scripts that have already been run.\n   * It will take full effect on the next navigation.\n   */\n\n\n  async setJavaScriptEnabled(enabled) {\n    if (this._javascriptEnabled === enabled) return;\n    this._javascriptEnabled = enabled;\n    await this._client.send('Emulation.setScriptExecutionDisabled', {\n      value: !enabled\n    });\n  }\n  /**\n   * Toggles bypassing page's Content-Security-Policy.\n   * @param enabled - sets bypassing of page's Content-Security-Policy.\n   * @remarks\n   * NOTE: CSP bypassing happens at the moment of CSP initialization rather than\n   * evaluation. Usually, this means that `page.setBypassCSP` should be called\n   * before navigating to the domain.\n   */\n\n\n  async setBypassCSP(enabled) {\n    await this._client.send('Page.setBypassCSP', {\n      enabled\n    });\n  }\n  /**\n   * @param type - Changes the CSS media type of the page. The only allowed\n   * values are `screen`, `print` and `null`. Passing `null` disables CSS media\n   * emulation.\n   * @example\n   * ```\n   * await page.evaluate(() => matchMedia('screen').matches);\n   * // → true\n   * await page.evaluate(() => matchMedia('print').matches);\n   * // → false\n   *\n   * await page.emulateMediaType('print');\n   * await page.evaluate(() => matchMedia('screen').matches);\n   * // → false\n   * await page.evaluate(() => matchMedia('print').matches);\n   * // → true\n   *\n   * await page.emulateMediaType(null);\n   * await page.evaluate(() => matchMedia('screen').matches);\n   * // → true\n   * await page.evaluate(() => matchMedia('print').matches);\n   * // → false\n   * ```\n   */\n\n\n  async emulateMediaType(type) {\n    (0, assert_js_1.assert)(type === 'screen' || type === 'print' || type === null, 'Unsupported media type: ' + type);\n    await this._client.send('Emulation.setEmulatedMedia', {\n      media: type || ''\n    });\n  }\n  /**\n   * Enables CPU throttling to emulate slow CPUs.\n   * @param factor - slowdown factor (1 is no throttle, 2 is 2x slowdown, etc).\n   */\n\n\n  async emulateCPUThrottling(factor) {\n    (0, assert_js_1.assert)(factor === null || factor >= 1, 'Throttling rate should be greater or equal to 1');\n    await this._client.send('Emulation.setCPUThrottlingRate', {\n      rate: factor !== null ? factor : 1\n    });\n  }\n  /**\n   * @param features - `<?Array<Object>>` Given an array of media feature\n   * objects, emulates CSS media features on the page. Each media feature object\n   * must have the following properties:\n   * @example\n   * ```js\n   * await page.emulateMediaFeatures([\n   * { name: 'prefers-color-scheme', value: 'dark' },\n   * ]);\n   * await page.evaluate(() => matchMedia('(prefers-color-scheme: dark)').matches);\n   * // → true\n   * await page.evaluate(() => matchMedia('(prefers-color-scheme: light)').matches);\n   * // → false\n   *\n   * await page.emulateMediaFeatures([\n   * { name: 'prefers-reduced-motion', value: 'reduce' },\n   * ]);\n   * await page.evaluate(\n   * () => matchMedia('(prefers-reduced-motion: reduce)').matches\n   * );\n   * // → true\n   * await page.evaluate(\n   * () => matchMedia('(prefers-reduced-motion: no-preference)').matches\n   * );\n   * // → false\n   *\n   * await page.emulateMediaFeatures([\n   * { name: 'prefers-color-scheme', value: 'dark' },\n   * { name: 'prefers-reduced-motion', value: 'reduce' },\n   * ]);\n   * await page.evaluate(() => matchMedia('(prefers-color-scheme: dark)').matches);\n   * // → true\n   * await page.evaluate(() => matchMedia('(prefers-color-scheme: light)').matches);\n   * // → false\n   * await page.evaluate(\n   * () => matchMedia('(prefers-reduced-motion: reduce)').matches\n   * );\n   * // → true\n   * await page.evaluate(\n   * () => matchMedia('(prefers-reduced-motion: no-preference)').matches\n   * );\n   * // → false\n   *\n   * await page.emulateMediaFeatures([{ name: 'color-gamut', value: 'p3' }]);\n   * await page.evaluate(() => matchMedia('(color-gamut: srgb)').matches);\n   * // → true\n   * await page.evaluate(() => matchMedia('(color-gamut: p3)').matches);\n   * // → true\n   * await page.evaluate(() => matchMedia('(color-gamut: rec2020)').matches);\n   * // → false\n   * ```\n   */\n\n\n  async emulateMediaFeatures(features) {\n    if (features === null) await this._client.send('Emulation.setEmulatedMedia', {\n      features: null\n    });\n\n    if (Array.isArray(features)) {\n      features.every(mediaFeature => {\n        const name = mediaFeature.name;\n        (0, assert_js_1.assert)(/^(?:prefers-(?:color-scheme|reduced-motion)|color-gamut)$/.test(name), 'Unsupported media feature: ' + name);\n        return true;\n      });\n      await this._client.send('Emulation.setEmulatedMedia', {\n        features: features\n      });\n    }\n  }\n  /**\n   * @param timezoneId - Changes the timezone of the page. See\n   * {@link https://source.chromium.org/chromium/chromium/deps/icu.git/+/faee8bc70570192d82d2978a71e2a615788597d1:source/data/misc/metaZones.txt | ICU’s metaZones.txt}\n   * for a list of supported timezone IDs. Passing\n   * `null` disables timezone emulation.\n   */\n\n\n  async emulateTimezone(timezoneId) {\n    try {\n      await this._client.send('Emulation.setTimezoneOverride', {\n        timezoneId: timezoneId || ''\n      });\n    } catch (error) {\n      if (error.message.includes('Invalid timezone')) throw new Error(`Invalid timezone ID: ${timezoneId}`);\n      throw error;\n    }\n  }\n  /**\n   * Emulates the idle state.\n   * If no arguments set, clears idle state emulation.\n   *\n   * @example\n   * ```js\n   * // set idle emulation\n   * await page.emulateIdleState({isUserActive: true, isScreenUnlocked: false});\n   *\n   * // do some checks here\n   * ...\n   *\n   * // clear idle emulation\n   * await page.emulateIdleState();\n   * ```\n   *\n   * @param overrides - Mock idle state. If not set, clears idle overrides\n   */\n\n\n  async emulateIdleState(overrides) {\n    if (overrides) {\n      await this._client.send('Emulation.setIdleOverride', {\n        isUserActive: overrides.isUserActive,\n        isScreenUnlocked: overrides.isScreenUnlocked\n      });\n    } else {\n      await this._client.send('Emulation.clearIdleOverride');\n    }\n  }\n  /**\n   * Simulates the given vision deficiency on the page.\n   *\n   * @example\n   * ```js\n   * const puppeteer = require('puppeteer');\n   *\n   * (async () => {\n   *   const browser = await puppeteer.launch();\n   *   const page = await browser.newPage();\n   *   await page.goto('https://v8.dev/blog/10-years');\n   *\n   *   await page.emulateVisionDeficiency('achromatopsia');\n   *   await page.screenshot({ path: 'achromatopsia.png' });\n   *\n   *   await page.emulateVisionDeficiency('deuteranopia');\n   *   await page.screenshot({ path: 'deuteranopia.png' });\n   *\n   *   await page.emulateVisionDeficiency('blurredVision');\n   *   await page.screenshot({ path: 'blurred-vision.png' });\n   *\n   *   await browser.close();\n   * })();\n   * ```\n   *\n   * @param type - the type of deficiency to simulate, or `'none'` to reset.\n   */\n\n\n  async emulateVisionDeficiency(type) {\n    const visionDeficiencies = new Set(['none', 'achromatopsia', 'blurredVision', 'deuteranopia', 'protanopia', 'tritanopia']);\n\n    try {\n      (0, assert_js_1.assert)(!type || visionDeficiencies.has(type), `Unsupported vision deficiency: ${type}`);\n      await this._client.send('Emulation.setEmulatedVisionDeficiency', {\n        type: type || 'none'\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n  /**\n   * `page.setViewport` will resize the page. A lot of websites don't expect\n   * phones to change size, so you should set the viewport before navigating to\n   * the page.\n   *\n   * In the case of multiple pages in a single browser, each page can have its\n   * own viewport size.\n   * @example\n   * ```js\n   * const page = await browser.newPage();\n   * await page.setViewport({\n   * width: 640,\n   * height: 480,\n   * deviceScaleFactor: 1,\n   * });\n   * await page.goto('https://example.com');\n   * ```\n   *\n   * @param viewport -\n   * @remarks\n   * Argument viewport have following properties:\n   *\n   * - `width`: page width in pixels. required\n   *\n   * - `height`: page height in pixels. required\n   *\n   * - `deviceScaleFactor`: Specify device scale factor (can be thought of as\n   *   DPR). Defaults to `1`.\n   *\n   * - `isMobile`: Whether the meta viewport tag is taken into account. Defaults\n   *   to `false`.\n   *\n   * - `hasTouch`: Specifies if viewport supports touch events. Defaults to `false`\n   *\n   * - `isLandScape`: Specifies if viewport is in landscape mode. Defaults to false.\n   *\n   * NOTE: in certain cases, setting viewport will reload the page in order to\n   * set the isMobile or hasTouch properties.\n   */\n\n\n  async setViewport(viewport) {\n    const needsReload = await this._emulationManager.emulateViewport(viewport);\n    this._viewport = viewport;\n    if (needsReload) await this.reload();\n  }\n  /**\n   * @returns\n   *\n   * - `width`: page's width in pixels\n   *\n   * - `height`: page's height in pixels\n   *\n   * - `deviceScalarFactor`: Specify device scale factor (can be though of as\n   *   dpr). Defaults to `1`.\n   *\n   * - `isMobile`: Whether the meta viewport tag is taken into account. Defaults\n   *   to `false`.\n   *\n   * - `hasTouch`: Specifies if viewport supports touch events. Defaults to\n   *   `false`.\n   *\n   * - `isLandScape`: Specifies if viewport is in landscape mode. Defaults to\n   *   `false`.\n   */\n\n\n  viewport() {\n    return this._viewport;\n  }\n  /**\n   * @remarks\n   *\n   * Evaluates a function in the page's context and returns the result.\n   *\n   * If the function passed to `page.evaluteHandle` returns a Promise, the\n   * function will wait for the promise to resolve and return its value.\n   *\n   * @example\n   *\n   * ```js\n   * const result = await frame.evaluate(() => {\n   *   return Promise.resolve(8 * 7);\n   * });\n   * console.log(result); // prints \"56\"\n   * ```\n   *\n   * You can pass a string instead of a function (although functions are\n   * recommended as they are easier to debug and use with TypeScript):\n   *\n   * @example\n   * ```\n   * const aHandle = await page.evaluate('1 + 2');\n   * ```\n   *\n   * To get the best TypeScript experience, you should pass in as the\n   * generic the type of `pageFunction`:\n   *\n   * ```\n   * const aHandle = await page.evaluate<() => number>(() => 2);\n   * ```\n   *\n   * @example\n   *\n   * {@link ElementHandle} instances (including {@link JSHandle}s) can be passed\n   * as arguments to the `pageFunction`:\n   *\n   * ```\n   * const bodyHandle = await page.$('body');\n   * const html = await page.evaluate(body => body.innerHTML, bodyHandle);\n   * await bodyHandle.dispose();\n   * ```\n   *\n   * @param pageFunction - a function that is run within the page\n   * @param args - arguments to be passed to the pageFunction\n   *\n   * @returns the return value of `pageFunction`.\n   */\n\n\n  async evaluate(pageFunction) {\n    for (var _len7 = arguments.length, args = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n      args[_key7 - 1] = arguments[_key7];\n    }\n\n    return this._frameManager.mainFrame().evaluate(pageFunction, ...args);\n  }\n  /**\n   * Adds a function which would be invoked in one of the following scenarios:\n   *\n   * - whenever the page is navigated\n   *\n   * - whenever the child frame is attached or navigated. In this case, the\n   * function is invoked in the context of the newly attached frame.\n   *\n   * The function is invoked after the document was created but before any of\n   * its scripts were run. This is useful to amend the JavaScript environment,\n   * e.g. to seed `Math.random`.\n   * @param pageFunction - Function to be evaluated in browser context\n   * @param args - Arguments to pass to `pageFunction`\n   * @example\n   * An example of overriding the navigator.languages property before the page loads:\n   * ```js\n   * // preload.js\n   *\n   * // overwrite the `languages` property to use a custom getter\n   * Object.defineProperty(navigator, 'languages', {\n   * get: function () {\n   * return ['en-US', 'en', 'bn'];\n   * },\n   * });\n   *\n   * // In your puppeteer script, assuming the preload.js file is\n   * in same folder of our script\n   * const preloadFile = fs.readFileSync('./preload.js', 'utf8');\n   * await page.evaluateOnNewDocument(preloadFile);\n   * ```\n   */\n\n\n  async evaluateOnNewDocument(pageFunction) {\n    for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n      args[_key8 - 1] = arguments[_key8];\n    }\n\n    const source = helper_js_1.helper.evaluationString(pageFunction, ...args);\n    await this._client.send('Page.addScriptToEvaluateOnNewDocument', {\n      source\n    });\n  }\n  /**\n   * Toggles ignoring cache for each request based on the enabled state. By\n   * default, caching is enabled.\n   * @param enabled - sets the `enabled` state of cache\n   */\n\n\n  async setCacheEnabled() {\n    let enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    await this._frameManager.networkManager().setCacheEnabled(enabled);\n  }\n  /**\n   * @remarks\n   * Options object which might have the following properties:\n   *\n   * - `path` : The file path to save the image to. The screenshot type\n   *   will be inferred from file extension. If `path` is a relative path, then\n   *   it is resolved relative to\n   *   {@link https://nodejs.org/api/process.html#process_process_cwd\n   *   | current working directory}.\n   *   If no path is provided, the image won't be saved to the disk.\n   *\n   * - `type` : Specify screenshot type, can be either `jpeg` or `png`.\n   *   Defaults to 'png'.\n   *\n   * - `quality` : The quality of the image, between 0-100. Not\n   *   applicable to `png` images.\n   *\n   * - `fullPage` : When true, takes a screenshot of the full\n   *   scrollable page. Defaults to `false`\n   *\n   * - `clip` : An object which specifies clipping region of the page.\n   *   Should have the following fields:<br/>\n   *  - `x` : x-coordinate of top-left corner of clip area.<br/>\n   *  - `y` :  y-coordinate of top-left corner of clip area.<br/>\n   *  - `width` : width of clipping area.<br/>\n   *  - `height` : height of clipping area.\n   *\n   * - `omitBackground` : Hides default white background and allows\n   *   capturing screenshots with transparency. Defaults to `false`\n   *\n   * - `encoding` : The encoding of the image, can be either base64 or\n   *   binary. Defaults to `binary`.\n   *\n   *\n   * NOTE: Screenshots take at least 1/6 second on OS X. See\n   * {@link https://crbug.com/741689} for discussion.\n   * @returns Promise which resolves to buffer or a base64 string (depending on\n   * the value of `encoding`) with captured screenshot.\n   */\n\n\n  async screenshot() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let screenshotType = null; // options.type takes precedence over inferring the type from options.path\n    // because it may be a 0-length file with no extension created beforehand\n    // (i.e. as a temp file).\n\n    if (options.type) {\n      const type = options.type;\n\n      if (type !== 'png' && type !== 'jpeg' && type !== 'webp') {\n        (0, assert_js_1.assertNever)(type, 'Unknown options.type value: ' + type);\n      }\n\n      screenshotType = options.type;\n    } else if (options.path) {\n      const filePath = options.path;\n      const extension = filePath.slice(filePath.lastIndexOf('.') + 1).toLowerCase();\n      if (extension === 'png') screenshotType = 'png';else if (extension === 'jpg' || extension === 'jpeg') screenshotType = 'jpeg';else if (extension === 'webp') screenshotType = 'webp';\n      (0, assert_js_1.assert)(screenshotType, `Unsupported screenshot type for extension \\`.${extension}\\``);\n    }\n\n    if (!screenshotType) screenshotType = 'png';\n\n    if (options.quality) {\n      (0, assert_js_1.assert)(screenshotType === 'jpeg' || screenshotType === 'webp', 'options.quality is unsupported for the ' + screenshotType + ' screenshots');\n      (0, assert_js_1.assert)(typeof options.quality === 'number', 'Expected options.quality to be a number but found ' + typeof options.quality);\n      (0, assert_js_1.assert)(Number.isInteger(options.quality), 'Expected options.quality to be an integer');\n      (0, assert_js_1.assert)(options.quality >= 0 && options.quality <= 100, 'Expected options.quality to be between 0 and 100 (inclusive), got ' + options.quality);\n    }\n\n    (0, assert_js_1.assert)(!options.clip || !options.fullPage, 'options.clip and options.fullPage are exclusive');\n\n    if (options.clip) {\n      (0, assert_js_1.assert)(typeof options.clip.x === 'number', 'Expected options.clip.x to be a number but found ' + typeof options.clip.x);\n      (0, assert_js_1.assert)(typeof options.clip.y === 'number', 'Expected options.clip.y to be a number but found ' + typeof options.clip.y);\n      (0, assert_js_1.assert)(typeof options.clip.width === 'number', 'Expected options.clip.width to be a number but found ' + typeof options.clip.width);\n      (0, assert_js_1.assert)(typeof options.clip.height === 'number', 'Expected options.clip.height to be a number but found ' + typeof options.clip.height);\n      (0, assert_js_1.assert)(options.clip.width !== 0, 'Expected options.clip.width not to be 0.');\n      (0, assert_js_1.assert)(options.clip.height !== 0, 'Expected options.clip.height not to be 0.');\n    }\n\n    return this._screenshotTaskQueue.postTask(() => this._screenshotTask(screenshotType, options));\n  }\n\n  async _screenshotTask(format, options) {\n    await this._client.send('Target.activateTarget', {\n      targetId: this._target._targetId\n    });\n    let clip = options.clip ? processClip(options.clip) : undefined;\n    let {\n      captureBeyondViewport = true\n    } = options;\n    captureBeyondViewport = typeof captureBeyondViewport === 'boolean' ? captureBeyondViewport : true;\n\n    if (options.fullPage) {\n      const metrics = await this._client.send('Page.getLayoutMetrics'); // Fallback to `contentSize` in case of using Firefox.\n\n      const {\n        width,\n        height\n      } = metrics.cssContentSize || metrics.contentSize; // Overwrite clip for full page.\n\n      clip = {\n        x: 0,\n        y: 0,\n        width,\n        height,\n        scale: 1\n      };\n\n      if (!captureBeyondViewport) {\n        const {\n          isMobile = false,\n          deviceScaleFactor = 1,\n          isLandscape = false\n        } = this._viewport || {};\n        const screenOrientation = isLandscape ? {\n          angle: 90,\n          type: 'landscapePrimary'\n        } : {\n          angle: 0,\n          type: 'portraitPrimary'\n        };\n        await this._client.send('Emulation.setDeviceMetricsOverride', {\n          mobile: isMobile,\n          width,\n          height,\n          deviceScaleFactor,\n          screenOrientation\n        });\n      }\n    }\n\n    const shouldSetDefaultBackground = options.omitBackground && (format === 'png' || format === 'webp');\n\n    if (shouldSetDefaultBackground) {\n      await this._setTransparentBackgroundColor();\n    }\n\n    const result = await this._client.send('Page.captureScreenshot', {\n      format,\n      quality: options.quality,\n      clip,\n      captureBeyondViewport\n    });\n\n    if (shouldSetDefaultBackground) {\n      await this._resetDefaultBackgroundColor();\n    }\n\n    if (options.fullPage && this._viewport) await this.setViewport(this._viewport);\n    const buffer = options.encoding === 'base64' ? result.data : Buffer.from(result.data, 'base64');\n\n    if (options.path) {\n      if (!environment_js_1.isNode) {\n        throw new Error('Screenshots can only be written to a file path in a Node environment.');\n      }\n\n      const fs = await helper_js_1.helper.importFSModule();\n      await fs.promises.writeFile(options.path, buffer);\n    }\n\n    return buffer;\n\n    function processClip(clip) {\n      const x = Math.round(clip.x);\n      const y = Math.round(clip.y);\n      const width = Math.round(clip.width + clip.x - x);\n      const height = Math.round(clip.height + clip.y - y);\n      return {\n        x,\n        y,\n        width,\n        height,\n        scale: 1\n      };\n    }\n  }\n  /**\n   * Generatees a PDF of the page with the `print` CSS media type.\n   * @remarks\n   *\n   * NOTE: PDF generation is only supported in Chrome headless mode.\n   *\n   * To generate a PDF with the `screen` media type, call\n   * {@link Page.emulateMediaType | `page.emulateMediaType('screen')`} before\n   * calling `page.pdf()`.\n   *\n   * By default, `page.pdf()` generates a pdf with modified colors for printing.\n   * Use the\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-print-color-adjust | `-webkit-print-color-adjust`}\n   * property to force rendering of exact colors.\n   *\n   *\n   * @param options - options for generating the PDF.\n   */\n\n\n  async createPDFStream() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      scale = 1,\n      displayHeaderFooter = false,\n      headerTemplate = '',\n      footerTemplate = '',\n      printBackground = false,\n      landscape = false,\n      pageRanges = '',\n      preferCSSPageSize = false,\n      margin = {},\n      omitBackground = false,\n      timeout = 30000\n    } = options;\n    let paperWidth = 8.5;\n    let paperHeight = 11;\n\n    if (options.format) {\n      const format = PDFOptions_js_1.paperFormats[options.format.toLowerCase()];\n      (0, assert_js_1.assert)(format, 'Unknown paper format: ' + options.format);\n      paperWidth = format.width;\n      paperHeight = format.height;\n    } else {\n      paperWidth = convertPrintParameterToInches(options.width) || paperWidth;\n      paperHeight = convertPrintParameterToInches(options.height) || paperHeight;\n    }\n\n    const marginTop = convertPrintParameterToInches(margin.top) || 0;\n    const marginLeft = convertPrintParameterToInches(margin.left) || 0;\n    const marginBottom = convertPrintParameterToInches(margin.bottom) || 0;\n    const marginRight = convertPrintParameterToInches(margin.right) || 0;\n\n    if (omitBackground) {\n      await this._setTransparentBackgroundColor();\n    }\n\n    const printCommandPromise = this._client.send('Page.printToPDF', {\n      transferMode: 'ReturnAsStream',\n      landscape,\n      displayHeaderFooter,\n      headerTemplate,\n      footerTemplate,\n      printBackground,\n      scale,\n      paperWidth,\n      paperHeight,\n      marginTop,\n      marginBottom,\n      marginLeft,\n      marginRight,\n      pageRanges,\n      preferCSSPageSize\n    });\n\n    const result = await helper_js_1.helper.waitWithTimeout(printCommandPromise, 'Page.printToPDF', timeout);\n\n    if (omitBackground) {\n      await this._resetDefaultBackgroundColor();\n    }\n\n    return helper_js_1.helper.getReadableFromProtocolStream(this._client, result.stream);\n  }\n  /**\n   * @param options -\n   * @returns\n   */\n\n\n  async pdf() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      path = undefined\n    } = options;\n    const readable = await this.createPDFStream(options);\n    return await helper_js_1.helper.getReadableAsBuffer(readable, path);\n  }\n  /**\n   * @returns The page's title\n   * @remarks\n   * Shortcut for {@link Frame.title | page.mainFrame().title()}.\n   */\n\n\n  async title() {\n    return this.mainFrame().title();\n  }\n\n  async close() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      runBeforeUnload: undefined\n    };\n    (0, assert_js_1.assert)(!!this._client._connection, 'Protocol error: Connection closed. Most likely the page has been closed.');\n    const runBeforeUnload = !!options.runBeforeUnload;\n\n    if (runBeforeUnload) {\n      await this._client.send('Page.close');\n    } else {\n      await this._client._connection.send('Target.closeTarget', {\n        targetId: this._target._targetId\n      });\n      await this._target._isClosedPromise;\n    }\n  }\n  /**\n   * Indicates that the page has been closed.\n   * @returns\n   */\n\n\n  isClosed() {\n    return this._closed;\n  }\n\n  get mouse() {\n    return this._mouse;\n  }\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page.mouse} to click in the center of the\n   * element. If there's no element matching `selector`, the method throws an\n   * error.\n   * @remarks Bear in mind that if `click()` triggers a navigation event and\n   * there's a separate `page.waitForNavigation()` promise to be resolved, you\n   * may end up with a race condition that yields unexpected results. The\n   * correct pattern for click and wait for navigation is the following:\n   * ```js\n   * const [response] = await Promise.all([\n   * page.waitForNavigation(waitOptions),\n   * page.click(selector, clickOptions),\n   * ]);\n   * ```\n   * Shortcut for {@link Frame.click | page.mainFrame().click(selector[, options]) }.\n   * @param selector - A `selector` to search for element to click. If there are\n   * multiple elements satisfying the `selector`, the first will be clicked\n   * @param options - `Object`\n   * @returns Promise which resolves when the element matching `selector` is\n   * successfully clicked. The Promise will be rejected if there is no element\n   * matching `selector`.\n   */\n\n\n  click(selector) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.mainFrame().click(selector, options);\n  }\n  /**\n   * This method fetches an element with `selector` and focuses it. If there's no\n   * element matching `selector`, the method throws an error.\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector }\n   * of an element to focus. If there are multiple elements satisfying the\n   * selector, the first will be focused.\n   * @returns  Promise which resolves when the element matching selector is\n   * successfully focused. The promise will be rejected if there is no element\n   * matching selector.\n   * @remarks\n   * Shortcut for {@link Frame.focus | page.mainFrame().focus(selector)}.\n   */\n\n\n  focus(selector) {\n    return this.mainFrame().focus(selector);\n  }\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page.mouse} to hover over the center of the element.\n   * If there's no element matching `selector`, the method throws an error.\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * to search for element to hover. If there are multiple elements satisfying\n   * the selector, the first will be hovered.\n   * @returns Promise which resolves when the element matching `selector` is\n   * successfully hovered. Promise gets rejected if there's no element matching\n   * `selector`.\n   * @remarks\n   * Shortcut for {@link Page.hover | page.mainFrame().hover(selector)}.\n   */\n\n\n  hover(selector) {\n    return this.mainFrame().hover(selector);\n  }\n  /**\n   * Triggers a `change` and `input` event once all the provided options have been\n   * selected. If there's no `<select>` element matching `selector`, the method\n   * throws an error.\n   *\n   * @example\n   * ```js\n   * page.select('select#colors', 'blue'); // single selection\n   * page.select('select#colors', 'red', 'green', 'blue'); // multiple selections\n   * ```\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | Selector}\n   * to query the page for\n   * @param values - Values of options to select. If the `<select>` has the\n   * `multiple` attribute, all values are considered, otherwise only the first one\n   * is taken into account.\n   * @returns\n   *\n   * @remarks\n   * Shortcut for {@link Frame.select | page.mainFrame().select()}\n   */\n\n\n  select(selector) {\n    for (var _len9 = arguments.length, values = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n      values[_key9 - 1] = arguments[_key9];\n    }\n\n    return this.mainFrame().select(selector, ...values);\n  }\n  /**\n   * This method fetches an element with `selector`, scrolls it into view if\n   * needed, and then uses {@link Page.touchscreen} to tap in the center of the element.\n   * If there's no element matching `selector`, the method throws an error.\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | Selector}\n   * to search for element to tap. If there are multiple elements satisfying the\n   * selector, the first will be tapped.\n   * @returns\n   * @remarks\n   * Shortcut for {@link Frame.tap | page.mainFrame().tap(selector)}.\n   */\n\n\n  tap(selector) {\n    return this.mainFrame().tap(selector);\n  }\n  /**\n   * Sends a `keydown`, `keypress/input`, and `keyup` event for each character\n   * in the text.\n   *\n   * To press a special key, like `Control` or `ArrowDown`, use {@link Keyboard.press}.\n   * @example\n   * ```\n   * await page.type('#mytextarea', 'Hello');\n   * // Types instantly\n   * await page.type('#mytextarea', 'World', { delay: 100 });\n   * // Types slower, like a user\n   * ```\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * of an element to type into. If there are multiple elements satisfying the\n   * selector, the first will be used.\n   * @param text - A text to type into a focused element.\n   * @param options - have property `delay` which is the Time to wait between\n   * key presses in milliseconds. Defaults to `0`.\n   * @returns\n   * @remarks\n   */\n\n\n  type(selector, text, options) {\n    return this.mainFrame().type(selector, text, options);\n  }\n  /**\n   * @remarks\n   *\n   * This method behaves differently depending on the first parameter. If it's a\n   * `string`, it will be treated as a `selector` or `xpath` (if the string\n   * starts with `//`). This method then is a shortcut for\n   * {@link Page.waitForSelector} or {@link Page.waitForXPath}.\n   *\n   * If the first argument is a function this method is a shortcut for\n   * {@link Page.waitForFunction}.\n   *\n   * If the first argument is a `number`, it's treated as a timeout in\n   * milliseconds and the method returns a promise which resolves after the\n   * timeout.\n   *\n   * @param selectorOrFunctionOrTimeout - a selector, predicate or timeout to\n   * wait for.\n   * @param options - optional waiting parameters.\n   * @param args - arguments to pass to `pageFunction`.\n   *\n   * @deprecated Don't use this method directly. Instead use the more explicit\n   * methods available: {@link Page.waitForSelector},\n   * {@link Page.waitForXPath}, {@link Page.waitForFunction} or\n   * {@link Page.waitForTimeout}.\n   */\n\n\n  waitFor(selectorOrFunctionOrTimeout) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (var _len10 = arguments.length, args = new Array(_len10 > 2 ? _len10 - 2 : 0), _key10 = 2; _key10 < _len10; _key10++) {\n      args[_key10 - 2] = arguments[_key10];\n    }\n\n    return this.mainFrame().waitFor(selectorOrFunctionOrTimeout, options, ...args);\n  }\n  /**\n   * Causes your script to wait for the given number of milliseconds.\n   *\n   * @remarks\n   *\n   * It's generally recommended to not wait for a number of seconds, but instead\n   * use {@link Page.waitForSelector}, {@link Page.waitForXPath} or\n   * {@link Page.waitForFunction} to wait for exactly the conditions you want.\n   *\n   * @example\n   *\n   * Wait for 1 second:\n   *\n   * ```\n   * await page.waitForTimeout(1000);\n   * ```\n   *\n   * @param milliseconds - the number of milliseconds to wait.\n   */\n\n\n  waitForTimeout(milliseconds) {\n    return this.mainFrame().waitForTimeout(milliseconds);\n  }\n  /**\n   * Wait for the `selector` to appear in page. If at the moment of calling the\n   * method the `selector` already exists, the method will return immediately. If\n   * the `selector` doesn't appear after the `timeout` milliseconds of waiting, the\n   * function will throw.\n   *\n   * This method works across navigations:\n   * ```js\n   * const puppeteer = require('puppeteer');\n   * (async () => {\n   * const browser = await puppeteer.launch();\n   * const page = await browser.newPage();\n   * let currentURL;\n   * page\n   * .waitForSelector('img')\n   * .then(() => console.log('First URL with image: ' + currentURL));\n   * for (currentURL of [\n   * 'https://example.com',\n   * 'https://google.com',\n   * 'https://bbc.com',\n   * ]) {\n   * await page.goto(currentURL);\n   * }\n   * await browser.close();\n   * })();\n   * ```\n   * @param selector - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors | selector}\n   * of an element to wait for\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves when element specified by selector string\n   * is added to DOM. Resolves to `null` if waiting for hidden: `true` and\n   * selector is not found in DOM.\n   * @remarks\n   * The optional Parameter in Arguments `options` are :\n   *\n   * - `Visible`: A boolean wait for element to be present in DOM and to be\n   * visible, i.e. to not have `display: none` or `visibility: hidden` CSS\n   * properties. Defaults to `false`.\n   *\n   * - `hidden`: ait for element to not be found in the DOM or to be hidden,\n   * i.e. have `display: none` or `visibility: hidden` CSS properties. Defaults to\n   * `false`.\n   *\n   * - `timeout`: maximum time to wait for in milliseconds. Defaults to `30000`\n   * (30 seconds). Pass `0` to disable timeout. The default value can be changed\n   * by using the {@link Page.setDefaultTimeout} method.\n   */\n\n\n  waitForSelector(selector) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.mainFrame().waitForSelector(selector, options);\n  }\n  /**\n   * Wait for the `xpath` to appear in page. If at the moment of calling the\n   * method the `xpath` already exists, the method will return immediately. If\n   * the `xpath` doesn't appear after the `timeout` milliseconds of waiting, the\n   * function will throw.\n   *\n   * This method works across navigation\n   * ```js\n   * const puppeteer = require('puppeteer');\n   * (async () => {\n   * const browser = await puppeteer.launch();\n   * const page = await browser.newPage();\n   * let currentURL;\n   * page\n   * .waitForXPath('//img')\n   * .then(() => console.log('First URL with image: ' + currentURL));\n   * for (currentURL of [\n   * 'https://example.com',\n   * 'https://google.com',\n   * 'https://bbc.com',\n   * ]) {\n   * await page.goto(currentURL);\n   * }\n   * await browser.close();\n   * })();\n   * ```\n   * @param xpath - A\n   * {@link https://developer.mozilla.org/en-US/docs/Web/XPath | xpath} of an\n   * element to wait for\n   * @param options - Optional waiting parameters\n   * @returns Promise which resolves when element specified by xpath string is\n   * added to DOM. Resolves to `null` if waiting for `hidden: true` and xpath is\n   * not found in DOM.\n   * @remarks\n   * The optional Argument `options` have properties:\n   *\n   * - `visible`: A boolean to wait for element to be present in DOM and to be\n   * visible, i.e. to not have `display: none` or `visibility: hidden` CSS\n   * properties. Defaults to `false`.\n   *\n   * - `hidden`: A boolean wait for element to not be found in the DOM or to be\n   * hidden, i.e. have `display: none` or `visibility: hidden` CSS properties.\n   * Defaults to `false`.\n   *\n   * - `timeout`: A number which is maximum time to wait for in milliseconds.\n   * Defaults to `30000` (30 seconds). Pass `0` to disable timeout. The default\n   * value can be changed by using the {@link Page.setDefaultTimeout} method.\n   */\n\n\n  waitForXPath(xpath) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.mainFrame().waitForXPath(xpath, options);\n  }\n  /**\n   * The `waitForFunction` can be used to observe viewport size change:\n   *\n   * ```\n   * const puppeteer = require('puppeteer');\n   * (async () => {\n   * const browser = await puppeteer.launch();\n   * const page = await browser.newPage();\n   * const watchDog = page.waitForFunction('window.innerWidth < 100');\n   * await page.setViewport({ width: 50, height: 50 });\n   * await watchDog;\n   * await browser.close();\n   * })();\n   * ```\n   * To pass arguments from node.js to the predicate of `page.waitForFunction` function:\n   * ```\n   * const selector = '.foo';\n   * await page.waitForFunction(\n   * (selector) => !!document.querySelector(selector),\n   * {},\n   * selector\n   * );\n   * ```\n   * The predicate of `page.waitForFunction` can be asynchronous too:\n   * ```\n   * const username = 'github-username';\n   * await page.waitForFunction(\n   * async (username) => {\n   * const githubResponse = await fetch(\n   *  `https://api.github.com/users/${username}`\n   * );\n   * const githubUser = await githubResponse.json();\n   * // show the avatar\n   * const img = document.createElement('img');\n   * img.src = githubUser.avatar_url;\n   * // wait 3 seconds\n   * await new Promise((resolve, reject) => setTimeout(resolve, 3000));\n   * img.remove();\n   * },\n   * {},\n   * username\n   * );\n   * ```\n   * @param pageFunction - Function to be evaluated in browser context\n   * @param options - Optional waiting parameters\n   * @param args -  Arguments to pass to `pageFunction`\n   * @returns Promise which resolves when the `pageFunction` returns a truthy\n   * value. It resolves to a JSHandle of the truthy value.\n   *\n   * The optional waiting parameter can be:\n   *\n   * - `Polling`: An interval at which the `pageFunction` is executed, defaults to\n   *   `raf`. If `polling` is a number, then it is treated as an interval in\n   *   milliseconds at which the function would be executed. If polling is a\n   *   string, then it can be one of the following values:<br/>\n   *    - `raf`: to constantly execute `pageFunction` in `requestAnimationFrame`\n   *      callback. This is the tightest polling mode which is suitable to\n   *      observe styling changes.<br/>\n   *    - `mutation`: to execute pageFunction on every DOM mutation.\n   *\n   * - `timeout`: maximum time to wait for in milliseconds. Defaults to `30000`\n   * (30 seconds). Pass `0` to disable timeout. The default value can be changed\n   * by using the\n   * {@link Page.setDefaultTimeout | page.setDefaultTimeout(timeout)} method.\n   *\n   */\n\n\n  waitForFunction(pageFunction) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (var _len11 = arguments.length, args = new Array(_len11 > 2 ? _len11 - 2 : 0), _key11 = 2; _key11 < _len11; _key11++) {\n      args[_key11 - 2] = arguments[_key11];\n    }\n\n    return this.mainFrame().waitForFunction(pageFunction, options, ...args);\n  }\n\n}\n\nexports.Page = Page;\nconst supportedMetrics = new Set(['Timestamp', 'Documents', 'Frames', 'JSEventListeners', 'Nodes', 'LayoutCount', 'RecalcStyleCount', 'LayoutDuration', 'RecalcStyleDuration', 'ScriptDuration', 'TaskDuration', 'JSHeapUsedSize', 'JSHeapTotalSize']);\nconst unitToPixels = {\n  px: 1,\n  in: 96,\n  cm: 37.8,\n  mm: 3.78\n};\n\nfunction convertPrintParameterToInches(parameter) {\n  if (typeof parameter === 'undefined') return undefined;\n  let pixels;\n\n  if (helper_js_1.helper.isNumber(parameter)) {\n    // Treat numbers as pixel values to be aligned with phantom's paperSize.\n    pixels =\n    /** @type {number} */\n    parameter;\n  } else if (helper_js_1.helper.isString(parameter)) {\n    const text =\n    /** @type {string} */\n    parameter;\n    let unit = text.substring(text.length - 2).toLowerCase();\n    let valueText = '';\n\n    if (unitToPixels.hasOwnProperty(unit)) {\n      valueText = text.substring(0, text.length - 2);\n    } else {\n      // In case of unknown unit try to parse the whole parameter as number of pixels.\n      // This is consistent with phantom's paperSize behavior.\n      unit = 'px';\n      valueText = text;\n    }\n\n    const value = Number(valueText);\n    (0, assert_js_1.assert)(!isNaN(value), 'Failed to parse parameter value: ' + text);\n    pixels = value * unitToPixels[unit];\n  } else {\n    throw new Error('page.pdf() Cannot handle parameter type: ' + typeof parameter);\n  }\n\n  return pixels / 96;\n}","map":{"version":3,"mappings":"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","names":["Page","EventEmitter_js_1","constructor","client","target","ignoreHTTPSErrors","screenshotTaskQueue","TimeoutSettings_js_1","Map","Set","WeakMap","_client","_target","_keyboard","Input_js_1","_mouse","_touchscreen","_accessibility","Accessibility_js_1","_frameManager","FrameManager_js_1","_timeoutSettings","_emulationManager","EmulationManager_js_1","_tracing","Tracing_js_1","_coverage","Coverage_js_1","_screenshotTaskQueue","_viewport","on","event","targetInfo","type","send","sessionId","catch","helper_js_1","session","Connection_js_1","fromSession","worker","WebWorker_js_1","url","_addConsoleMessage","bind","_handleException","_workers","set","emit","get","delete","FrameAttached","FrameDetached","FrameNavigated","networkManager","NetworkManager_js_1","Request","RequestServedFromCache","Response","RequestFailed","RequestFinished","_fileChooserInterceptors","_onConsoleAPI","_onBindingCalled","_onDialog","exception","exceptionDetails","_onTargetCrashed","_emitMetrics","_onLogEntryAdded","_onFileChooser","_isClosedPromise","then","_closed","create","defaultViewport","page","_initialize","setViewport","Promise","all","initialize","autoAttach","waitForDebuggerOnStart","flatten","size","frame","frameId","context","executionContext","element","_adoptBackendNodeId","backendNodeId","interceptors","Array","from","clear","fileChooser","FileChooser_js_1","interceptor","call","isDragInterceptionEnabled","_userDragInterceptionEnabled","isJavaScriptEnabled","_javascriptEnabled","eventName","handler","wrap","enqueueInterceptAction","_handlerMap","once","off","waitForFileChooser","options","enabled","timeout","callback","promise","x","add","waitWithTimeout","error","setGeolocation","longitude","latitude","accuracy","Error","browser","browserContext","level","text","args","source","lineNumber","entry","map","arg","releaseObject","ConsoleMessage_js_1","mainFrame","keyboard","touchscreen","coverage","tracing","accessibility","frames","workers","values","setRequestInterception","value","setDragInterception","setOfflineMode","emulateNetworkConditions","networkConditions","setDefaultNavigationTimeout","setDefaultTimeout","$","selector","evaluateHandle","pageFunction","queryObjects","prototypeHandle","$eval","$$eval","$$","$x","expression","cookies","urls","originalCookies","length","unsupportedCookieAttributes","filterUnsupportedAttributes","cookie","attr","deleteCookie","pageURL","item","Object","assign","startsWith","setCookie","startsWithHTTP","items","name","String","prototype","addScriptTag","addStyleTag","exposeFunction","puppeteerFunction","_pageBindings","has","exposedFunction","default","pageBindingInitString","evaluate","authenticate","credentials","setExtraHTTPHeaders","headers","setUserAgent","userAgent","userAgentMetadata","metrics","response","_buildMetricsObject","title","result","metric","supportedMetrics","message","getExceptionMessage","err","stack","executionContextId","executionContextById","stackTrace","payload","JSON","parse","seq","pageBindingDeliverResultString","pageBindingDeliverErrorString","pageBindingDeliverErrorValueString","contextId","listenerCount","forEach","dispose","textTokens","remoteObject","_remoteObject","objectId","push","toString","valueFromRemoteObject","stackTraceLocations","callFrame","callFrames","columnNumber","join","dialogType","validDialogTypes","dialog","Dialog_js_1","defaultPrompt","_resetDefaultBackgroundColor","_setTransparentBackgroundColor","color","r","g","b","a","content","setContent","html","goto","reload","waitForNavigation","_sessionClosePromise","_disconnectPromise","fulfill","Disconnected","waitForRequest","urlOrPredicate","waitForEvent","request","isString","waitForResponse","waitForNetworkIdle","idleTime","idleResolveCallback","idlePromise","resolve","abortRejectCallback","abortPromise","_","reject","idleTimer","onIdle","cleanup","clearTimeout","numRequestsInProgress","setTimeout","eventHandler","listenToEvent","eventPromises","race","waitForFrame","predicate","eventRace","goBack","_go","goForward","delta","history","entries","currentIndex","entryId","id","bringToFront","emulate","viewport","setJavaScriptEnabled","setBypassCSP","emulateMediaType","media","emulateCPUThrottling","factor","rate","emulateMediaFeatures","features","isArray","every","mediaFeature","test","emulateTimezone","timezoneId","includes","emulateIdleState","overrides","isUserActive","isScreenUnlocked","emulateVisionDeficiency","visionDeficiencies","needsReload","emulateViewport","evaluateOnNewDocument","evaluationString","setCacheEnabled","screenshot","screenshotType","path","filePath","extension","slice","lastIndexOf","toLowerCase","quality","Number","isInteger","clip","fullPage","y","width","height","postTask","_screenshotTask","format","targetId","_targetId","processClip","undefined","captureBeyondViewport","cssContentSize","contentSize","scale","isMobile","deviceScaleFactor","isLandscape","screenOrientation","angle","mobile","shouldSetDefaultBackground","omitBackground","buffer","encoding","data","Buffer","environment_js_1","fs","importFSModule","promises","writeFile","Math","round","createPDFStream","displayHeaderFooter","headerTemplate","footerTemplate","printBackground","landscape","pageRanges","preferCSSPageSize","margin","paperWidth","paperHeight","PDFOptions_js_1","convertPrintParameterToInches","marginTop","top","marginLeft","left","marginBottom","bottom","marginRight","right","printCommandPromise","transferMode","getReadableFromProtocolStream","stream","pdf","readable","getReadableAsBuffer","close","runBeforeUnload","_connection","isClosed","mouse","click","focus","hover","select","tap","waitFor","selectorOrFunctionOrTimeout","waitForTimeout","milliseconds","waitForSelector","waitForXPath","xpath","waitForFunction","exports","unitToPixels","px","in","cm","mm","parameter","pixels","isNumber","unit","substring","valueText","hasOwnProperty","isNaN"],"sources":["../../../../src/common/Page.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}