{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSSCoverage = exports.JSCoverage = exports.Coverage = void 0;\n\nconst assert_js_1 = require(\"./assert.js\");\n\nconst helper_js_1 = require(\"./helper.js\");\n\nconst ExecutionContext_js_1 = require(\"./ExecutionContext.js\");\n/**\n * The Coverage class provides methods to gathers information about parts of\n * JavaScript and CSS that were used by the page.\n *\n * @remarks\n * To output coverage in a form consumable by {@link https://github.com/istanbuljs | Istanbul},\n * see {@link https://github.com/istanbuljs/puppeteer-to-istanbul | puppeteer-to-istanbul}.\n *\n * @example\n * An example of using JavaScript and CSS coverage to get percentage of initially\n * executed code:\n * ```js\n * // Enable both JavaScript and CSS coverage\n * await Promise.all([\n *   page.coverage.startJSCoverage(),\n *   page.coverage.startCSSCoverage()\n * ]);\n * // Navigate to page\n * await page.goto('https://example.com');\n * // Disable both JavaScript and CSS coverage\n * const [jsCoverage, cssCoverage] = await Promise.all([\n *   page.coverage.stopJSCoverage(),\n *   page.coverage.stopCSSCoverage(),\n * ]);\n * let totalBytes = 0;\n * let usedBytes = 0;\n * const coverage = [...jsCoverage, ...cssCoverage];\n * for (const entry of coverage) {\n *   totalBytes += entry.text.length;\n *   for (const range of entry.ranges)\n *     usedBytes += range.end - range.start - 1;\n * }\n * console.log(`Bytes used: ${usedBytes / totalBytes * 100}%`);\n * ```\n * @public\n */\n\n\nclass Coverage {\n  constructor(client) {\n    this._jsCoverage = new JSCoverage(client);\n    this._cssCoverage = new CSSCoverage(client);\n  }\n  /**\n   * @param options - Set of configurable options for coverage defaults to\n   * `resetOnNavigation : true, reportAnonymousScripts : false`\n   * @returns Promise that resolves when coverage is started.\n   *\n   * @remarks\n   * Anonymous scripts are ones that don't have an associated url. These are\n   * scripts that are dynamically created on the page using `eval` or\n   * `new Function`. If `reportAnonymousScripts` is set to `true`, anonymous\n   * scripts will have `__puppeteer_evaluation_script__` as their URL.\n   */\n\n\n  async startJSCoverage() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return await this._jsCoverage.start(options);\n  }\n  /**\n   * @returns Promise that resolves to the array of coverage reports for\n   * all scripts.\n   *\n   * @remarks\n   * JavaScript Coverage doesn't include anonymous scripts by default.\n   * However, scripts with sourceURLs are reported.\n   */\n\n\n  async stopJSCoverage() {\n    return await this._jsCoverage.stop();\n  }\n  /**\n   * @param options - Set of configurable options for coverage, defaults to\n   * `resetOnNavigation : true`\n   * @returns Promise that resolves when coverage is started.\n   */\n\n\n  async startCSSCoverage() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return await this._cssCoverage.start(options);\n  }\n  /**\n   * @returns Promise that resolves to the array of coverage reports\n   * for all stylesheets.\n   * @remarks\n   * CSS Coverage doesn't include dynamically injected style tags\n   * without sourceURLs.\n   */\n\n\n  async stopCSSCoverage() {\n    return await this._cssCoverage.stop();\n  }\n\n}\n\nexports.Coverage = Coverage;\n/**\n * @public\n */\n\nclass JSCoverage {\n  constructor(client) {\n    this._enabled = false;\n    this._scriptURLs = new Map();\n    this._scriptSources = new Map();\n    this._eventListeners = [];\n    this._resetOnNavigation = false;\n    this._reportAnonymousScripts = false;\n    this._includeRawScriptCoverage = false;\n    this._client = client;\n  }\n\n  async start() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, assert_js_1.assert)(!this._enabled, 'JSCoverage is already enabled');\n    const {\n      resetOnNavigation = true,\n      reportAnonymousScripts = false,\n      includeRawScriptCoverage = false\n    } = options;\n    this._resetOnNavigation = resetOnNavigation;\n    this._reportAnonymousScripts = reportAnonymousScripts;\n    this._includeRawScriptCoverage = includeRawScriptCoverage;\n    this._enabled = true;\n\n    this._scriptURLs.clear();\n\n    this._scriptSources.clear();\n\n    this._eventListeners = [helper_js_1.helper.addEventListener(this._client, 'Debugger.scriptParsed', this._onScriptParsed.bind(this)), helper_js_1.helper.addEventListener(this._client, 'Runtime.executionContextsCleared', this._onExecutionContextsCleared.bind(this))];\n    await Promise.all([this._client.send('Profiler.enable'), this._client.send('Profiler.startPreciseCoverage', {\n      callCount: this._includeRawScriptCoverage,\n      detailed: true\n    }), this._client.send('Debugger.enable'), this._client.send('Debugger.setSkipAllPauses', {\n      skip: true\n    })]);\n  }\n\n  _onExecutionContextsCleared() {\n    if (!this._resetOnNavigation) return;\n\n    this._scriptURLs.clear();\n\n    this._scriptSources.clear();\n  }\n\n  async _onScriptParsed(event) {\n    // Ignore puppeteer-injected scripts\n    if (event.url === ExecutionContext_js_1.EVALUATION_SCRIPT_URL) return; // Ignore other anonymous scripts unless the reportAnonymousScripts option is true.\n\n    if (!event.url && !this._reportAnonymousScripts) return;\n\n    try {\n      const response = await this._client.send('Debugger.getScriptSource', {\n        scriptId: event.scriptId\n      });\n\n      this._scriptURLs.set(event.scriptId, event.url);\n\n      this._scriptSources.set(event.scriptId, response.scriptSource);\n    } catch (error) {\n      // This might happen if the page has already navigated away.\n      (0, helper_js_1.debugError)(error);\n    }\n  }\n\n  async stop() {\n    (0, assert_js_1.assert)(this._enabled, 'JSCoverage is not enabled');\n    this._enabled = false;\n    const result = await Promise.all([this._client.send('Profiler.takePreciseCoverage'), this._client.send('Profiler.stopPreciseCoverage'), this._client.send('Profiler.disable'), this._client.send('Debugger.disable')]);\n    helper_js_1.helper.removeEventListeners(this._eventListeners);\n    const coverage = [];\n    const profileResponse = result[0];\n\n    for (const entry of profileResponse.result) {\n      let url = this._scriptURLs.get(entry.scriptId);\n\n      if (!url && this._reportAnonymousScripts) url = 'debugger://VM' + entry.scriptId;\n\n      const text = this._scriptSources.get(entry.scriptId);\n\n      if (text === undefined || url === undefined) continue;\n      const flattenRanges = [];\n\n      for (const func of entry.functions) flattenRanges.push(...func.ranges);\n\n      const ranges = convertToDisjointRanges(flattenRanges);\n\n      if (!this._includeRawScriptCoverage) {\n        coverage.push({\n          url,\n          ranges,\n          text\n        });\n      } else {\n        coverage.push({\n          url,\n          ranges,\n          text,\n          rawScriptCoverage: entry\n        });\n      }\n    }\n\n    return coverage;\n  }\n\n}\n\nexports.JSCoverage = JSCoverage;\n/**\n * @public\n */\n\nclass CSSCoverage {\n  constructor(client) {\n    this._enabled = false;\n    this._stylesheetURLs = new Map();\n    this._stylesheetSources = new Map();\n    this._eventListeners = [];\n    this._resetOnNavigation = false;\n    this._reportAnonymousScripts = false;\n    this._client = client;\n  }\n\n  async start() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, assert_js_1.assert)(!this._enabled, 'CSSCoverage is already enabled');\n    const {\n      resetOnNavigation = true\n    } = options;\n    this._resetOnNavigation = resetOnNavigation;\n    this._enabled = true;\n\n    this._stylesheetURLs.clear();\n\n    this._stylesheetSources.clear();\n\n    this._eventListeners = [helper_js_1.helper.addEventListener(this._client, 'CSS.styleSheetAdded', this._onStyleSheet.bind(this)), helper_js_1.helper.addEventListener(this._client, 'Runtime.executionContextsCleared', this._onExecutionContextsCleared.bind(this))];\n    await Promise.all([this._client.send('DOM.enable'), this._client.send('CSS.enable'), this._client.send('CSS.startRuleUsageTracking')]);\n  }\n\n  _onExecutionContextsCleared() {\n    if (!this._resetOnNavigation) return;\n\n    this._stylesheetURLs.clear();\n\n    this._stylesheetSources.clear();\n  }\n\n  async _onStyleSheet(event) {\n    const header = event.header; // Ignore anonymous scripts\n\n    if (!header.sourceURL) return;\n\n    try {\n      const response = await this._client.send('CSS.getStyleSheetText', {\n        styleSheetId: header.styleSheetId\n      });\n\n      this._stylesheetURLs.set(header.styleSheetId, header.sourceURL);\n\n      this._stylesheetSources.set(header.styleSheetId, response.text);\n    } catch (error) {\n      // This might happen if the page has already navigated away.\n      (0, helper_js_1.debugError)(error);\n    }\n  }\n\n  async stop() {\n    (0, assert_js_1.assert)(this._enabled, 'CSSCoverage is not enabled');\n    this._enabled = false;\n    const ruleTrackingResponse = await this._client.send('CSS.stopRuleUsageTracking');\n    await Promise.all([this._client.send('CSS.disable'), this._client.send('DOM.disable')]);\n    helper_js_1.helper.removeEventListeners(this._eventListeners); // aggregate by styleSheetId\n\n    const styleSheetIdToCoverage = new Map();\n\n    for (const entry of ruleTrackingResponse.ruleUsage) {\n      let ranges = styleSheetIdToCoverage.get(entry.styleSheetId);\n\n      if (!ranges) {\n        ranges = [];\n        styleSheetIdToCoverage.set(entry.styleSheetId, ranges);\n      }\n\n      ranges.push({\n        startOffset: entry.startOffset,\n        endOffset: entry.endOffset,\n        count: entry.used ? 1 : 0\n      });\n    }\n\n    const coverage = [];\n\n    for (const styleSheetId of this._stylesheetURLs.keys()) {\n      const url = this._stylesheetURLs.get(styleSheetId);\n\n      const text = this._stylesheetSources.get(styleSheetId);\n\n      const ranges = convertToDisjointRanges(styleSheetIdToCoverage.get(styleSheetId) || []);\n      coverage.push({\n        url,\n        ranges,\n        text\n      });\n    }\n\n    return coverage;\n  }\n\n}\n\nexports.CSSCoverage = CSSCoverage;\n\nfunction convertToDisjointRanges(nestedRanges) {\n  const points = [];\n\n  for (const range of nestedRanges) {\n    points.push({\n      offset: range.startOffset,\n      type: 0,\n      range\n    });\n    points.push({\n      offset: range.endOffset,\n      type: 1,\n      range\n    });\n  } // Sort points to form a valid parenthesis sequence.\n\n\n  points.sort((a, b) => {\n    // Sort with increasing offsets.\n    if (a.offset !== b.offset) return a.offset - b.offset; // All \"end\" points should go before \"start\" points.\n\n    if (a.type !== b.type) return b.type - a.type;\n    const aLength = a.range.endOffset - a.range.startOffset;\n    const bLength = b.range.endOffset - b.range.startOffset; // For two \"start\" points, the one with longer range goes first.\n\n    if (a.type === 0) return bLength - aLength; // For two \"end\" points, the one with shorter range goes first.\n\n    return aLength - bLength;\n  });\n  const hitCountStack = [];\n  const results = [];\n  let lastOffset = 0; // Run scanning line to intersect all ranges.\n\n  for (const point of points) {\n    if (hitCountStack.length && lastOffset < point.offset && hitCountStack[hitCountStack.length - 1] > 0) {\n      const lastResult = results.length ? results[results.length - 1] : null;\n      if (lastResult && lastResult.end === lastOffset) lastResult.end = point.offset;else results.push({\n        start: lastOffset,\n        end: point.offset\n      });\n    }\n\n    lastOffset = point.offset;\n    if (point.type === 0) hitCountStack.push(point.range.count);else hitCountStack.pop();\n  } // Filter out empty ranges.\n\n\n  return results.filter(range => range.end - range.start > 1);\n}","map":{"version":3,"mappings":"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","names":["Coverage","constructor","client","_jsCoverage","JSCoverage","_cssCoverage","CSSCoverage","startJSCoverage","options","start","stopJSCoverage","stop","startCSSCoverage","stopCSSCoverage","exports","Map","_client","_enabled","resetOnNavigation","reportAnonymousScripts","includeRawScriptCoverage","_resetOnNavigation","_reportAnonymousScripts","_includeRawScriptCoverage","_scriptURLs","clear","_scriptSources","_eventListeners","helper_js_1","addEventListener","_onScriptParsed","bind","_onExecutionContextsCleared","Promise","all","send","callCount","detailed","skip","event","url","ExecutionContext_js_1","response","scriptId","set","scriptSource","error","result","removeEventListeners","coverage","profileResponse","entry","get","text","undefined","flattenRanges","func","functions","push","ranges","convertToDisjointRanges","rawScriptCoverage","_stylesheetURLs","_stylesheetSources","_onStyleSheet","header","sourceURL","styleSheetId","ruleTrackingResponse","styleSheetIdToCoverage","ruleUsage","startOffset","endOffset","count","used","keys","nestedRanges","points","range","offset","type","sort","a","b","aLength","bLength","hitCountStack","results","lastOffset","point","length","lastResult","end","pop","filter"],"sources":["../../../../src/common/Coverage.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}