{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExecutionContext = exports.EVALUATION_SCRIPT_URL = void 0;\n\nconst assert_js_1 = require(\"./assert.js\");\n\nconst helper_js_1 = require(\"./helper.js\");\n\nconst JSHandle_js_1 = require(\"./JSHandle.js\");\n/**\n * @public\n */\n\n\nexports.EVALUATION_SCRIPT_URL = '__puppeteer_evaluation_script__';\nconst SOURCE_URL_REGEX = /^[\\040\\t]*\\/\\/[@#] sourceURL=\\s*(\\S*?)\\s*$/m;\n/**\n * This class represents a context for JavaScript execution. A [Page] might have\n * many execution contexts:\n * - each\n *   {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe |\n *   frame } has \"default\" execution context that is always created after frame is\n *   attached to DOM. This context is returned by the\n *   {@link Frame.executionContext} method.\n * - {@link https://developer.chrome.com/extensions | Extension}'s content scripts\n *   create additional execution contexts.\n *\n * Besides pages, execution contexts can be found in\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API |\n * workers }.\n *\n * @public\n */\n\nclass ExecutionContext {\n  /**\n   * @internal\n   */\n  constructor(client, contextPayload, world) {\n    this._client = client;\n    this._world = world;\n    this._contextId = contextPayload.id;\n    this._contextName = contextPayload.name;\n  }\n  /**\n   * @remarks\n   *\n   * Not every execution context is associated with a frame. For\n   * example, workers and extensions have execution contexts that are not\n   * associated with frames.\n   *\n   * @returns The frame associated with this execution context.\n   */\n\n\n  frame() {\n    return this._world ? this._world.frame() : null;\n  }\n  /**\n   * @remarks\n   * If the function passed to the `executionContext.evaluate` returns a\n   * Promise, then `executionContext.evaluate` would wait for the promise to\n   * resolve and return its value. If the function passed to the\n   * `executionContext.evaluate` returns a non-serializable value, then\n   * `executionContext.evaluate` resolves to `undefined`. DevTools Protocol also\n   * supports transferring some additional values that are not serializable by\n   * `JSON`: `-0`, `NaN`, `Infinity`, `-Infinity`, and bigint literals.\n   *\n   *\n   * @example\n   * ```js\n   * const executionContext = await page.mainFrame().executionContext();\n   * const result = await executionContext.evaluate(() => Promise.resolve(8 * 7))* ;\n   * console.log(result); // prints \"56\"\n   * ```\n   *\n   * @example\n   * A string can also be passed in instead of a function.\n   *\n   * ```js\n   * console.log(await executionContext.evaluate('1 + 2')); // prints \"3\"\n   * ```\n   *\n   * @example\n   * {@link JSHandle} instances can be passed as arguments to the\n   * `executionContext.* evaluate`:\n   * ```js\n   * const oneHandle = await executionContext.evaluateHandle(() => 1);\n   * const twoHandle = await executionContext.evaluateHandle(() => 2);\n   * const result = await executionContext.evaluate(\n   *    (a, b) => a + b, oneHandle, * twoHandle\n   * );\n   * await oneHandle.dispose();\n   * await twoHandle.dispose();\n   * console.log(result); // prints '3'.\n   * ```\n   * @param pageFunction - a function to be evaluated in the `executionContext`\n   * @param args - argument to pass to the page function\n   *\n   * @returns A promise that resolves to the return value of the given function.\n   */\n\n\n  async evaluate(pageFunction) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return await this._evaluateInternal(true, pageFunction, ...args);\n  }\n  /**\n   * @remarks\n   * The only difference between `executionContext.evaluate` and\n   * `executionContext.evaluateHandle` is that `executionContext.evaluateHandle`\n   * returns an in-page object (a {@link JSHandle}).\n   * If the function passed to the `executionContext.evaluateHandle` returns a\n   * Promise, then `executionContext.evaluateHandle` would wait for the\n   * promise to resolve and return its value.\n   *\n   * @example\n   * ```js\n   * const context = await page.mainFrame().executionContext();\n   * const aHandle = await context.evaluateHandle(() => Promise.resolve(self));\n   * aHandle; // Handle for the global object.\n   * ```\n   *\n   * @example\n   * A string can also be passed in instead of a function.\n   *\n   * ```js\n   * // Handle for the '3' * object.\n   * const aHandle = await context.evaluateHandle('1 + 2');\n   * ```\n   *\n   * @example\n   * JSHandle instances can be passed as arguments\n   * to the `executionContext.* evaluateHandle`:\n   *\n   * ```js\n   * const aHandle = await context.evaluateHandle(() => document.body);\n   * const resultHandle = await context.evaluateHandle(body => body.innerHTML, * aHandle);\n   * console.log(await resultHandle.jsonValue()); // prints body's innerHTML\n   * await aHandle.dispose();\n   * await resultHandle.dispose();\n   * ```\n   *\n   * @param pageFunction - a function to be evaluated in the `executionContext`\n   * @param args - argument to pass to the page function\n   *\n   * @returns A promise that resolves to the return value of the given function\n   * as an in-page object (a {@link JSHandle}).\n   */\n\n\n  async evaluateHandle(pageFunction) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return this._evaluateInternal(false, pageFunction, ...args);\n  }\n\n  async _evaluateInternal(returnByValue, pageFunction) {\n    const suffix = `//# sourceURL=${exports.EVALUATION_SCRIPT_URL}`;\n\n    if (helper_js_1.helper.isString(pageFunction)) {\n      const contextId = this._contextId;\n      const expression = pageFunction;\n      const expressionWithSourceUrl = SOURCE_URL_REGEX.test(expression) ? expression : expression + '\\n' + suffix;\n      const {\n        exceptionDetails,\n        result: remoteObject\n      } = await this._client.send('Runtime.evaluate', {\n        expression: expressionWithSourceUrl,\n        contextId,\n        returnByValue,\n        awaitPromise: true,\n        userGesture: true\n      }).catch(rewriteError);\n      if (exceptionDetails) throw new Error('Evaluation failed: ' + helper_js_1.helper.getExceptionMessage(exceptionDetails));\n      return returnByValue ? helper_js_1.helper.valueFromRemoteObject(remoteObject) : (0, JSHandle_js_1.createJSHandle)(this, remoteObject);\n    }\n\n    if (typeof pageFunction !== 'function') throw new Error(`Expected to get |string| or |function| as the first argument, but got \"${pageFunction}\" instead.`);\n    let functionText = pageFunction.toString();\n\n    try {\n      new Function('(' + functionText + ')');\n    } catch (error) {\n      // This means we might have a function shorthand. Try another\n      // time prefixing 'function '.\n      if (functionText.startsWith('async ')) functionText = 'async function ' + functionText.substring('async '.length);else functionText = 'function ' + functionText;\n\n      try {\n        new Function('(' + functionText + ')');\n      } catch (error) {\n        // We tried hard to serialize, but there's a weird beast here.\n        throw new Error('Passed function is not well-serializable!');\n      }\n    }\n\n    let callFunctionOnPromise;\n\n    try {\n      for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n        args[_key3 - 2] = arguments[_key3];\n      }\n\n      callFunctionOnPromise = this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: functionText + '\\n' + suffix + '\\n',\n        executionContextId: this._contextId,\n        arguments: args.map(convertArgument.bind(this)),\n        returnByValue,\n        awaitPromise: true,\n        userGesture: true\n      });\n    } catch (error) {\n      if (error instanceof TypeError && error.message.startsWith('Converting circular structure to JSON')) error.message += ' Are you passing a nested JSHandle?';\n      throw error;\n    }\n\n    const {\n      exceptionDetails,\n      result: remoteObject\n    } = await callFunctionOnPromise.catch(rewriteError);\n    if (exceptionDetails) throw new Error('Evaluation failed: ' + helper_js_1.helper.getExceptionMessage(exceptionDetails));\n    return returnByValue ? helper_js_1.helper.valueFromRemoteObject(remoteObject) : (0, JSHandle_js_1.createJSHandle)(this, remoteObject);\n    /**\n     * @param {*} arg\n     * @returns {*}\n     * @this {ExecutionContext}\n     */\n\n    function convertArgument(arg) {\n      if (typeof arg === 'bigint') // eslint-disable-line valid-typeof\n        return {\n          unserializableValue: `${arg.toString()}n`\n        };\n      if (Object.is(arg, -0)) return {\n        unserializableValue: '-0'\n      };\n      if (Object.is(arg, Infinity)) return {\n        unserializableValue: 'Infinity'\n      };\n      if (Object.is(arg, -Infinity)) return {\n        unserializableValue: '-Infinity'\n      };\n      if (Object.is(arg, NaN)) return {\n        unserializableValue: 'NaN'\n      };\n      const objectHandle = arg && arg instanceof JSHandle_js_1.JSHandle ? arg : null;\n\n      if (objectHandle) {\n        if (objectHandle._context !== this) throw new Error('JSHandles can be evaluated only in the context they were created!');\n        if (objectHandle._disposed) throw new Error('JSHandle is disposed!');\n        if (objectHandle._remoteObject.unserializableValue) return {\n          unserializableValue: objectHandle._remoteObject.unserializableValue\n        };\n        if (!objectHandle._remoteObject.objectId) return {\n          value: objectHandle._remoteObject.value\n        };\n        return {\n          objectId: objectHandle._remoteObject.objectId\n        };\n      }\n\n      return {\n        value: arg\n      };\n    }\n\n    function rewriteError(error) {\n      if (error.message.includes('Object reference chain is too long')) return {\n        result: {\n          type: 'undefined'\n        }\n      };\n      if (error.message.includes(\"Object couldn't be returned by value\")) return {\n        result: {\n          type: 'undefined'\n        }\n      };\n      if (error.message.endsWith('Cannot find context with specified id') || error.message.endsWith('Inspected target navigated or closed')) throw new Error('Execution context was destroyed, most likely because of a navigation.');\n      throw error;\n    }\n  }\n  /**\n   * This method iterates the JavaScript heap and finds all the objects with the\n   * given prototype.\n   * @remarks\n   * @example\n   * ```js\n   * // Create a Map object\n   * await page.evaluate(() => window.map = new Map());\n   * // Get a handle to the Map object prototype\n   * const mapPrototype = await page.evaluateHandle(() => Map.prototype);\n   * // Query all map instances into an array\n   * const mapInstances = await page.queryObjects(mapPrototype);\n   * // Count amount of map objects in heap\n   * const count = await page.evaluate(maps => maps.length, mapInstances);\n   * await mapInstances.dispose();\n   * await mapPrototype.dispose();\n   * ```\n   *\n   * @param prototypeHandle - a handle to the object prototype\n   *\n   * @returns A handle to an array of objects with the given prototype.\n   */\n\n\n  async queryObjects(prototypeHandle) {\n    (0, assert_js_1.assert)(!prototypeHandle._disposed, 'Prototype JSHandle is disposed!');\n    (0, assert_js_1.assert)(prototypeHandle._remoteObject.objectId, 'Prototype JSHandle must not be referencing primitive value');\n    const response = await this._client.send('Runtime.queryObjects', {\n      prototypeObjectId: prototypeHandle._remoteObject.objectId\n    });\n    return (0, JSHandle_js_1.createJSHandle)(this, response.objects);\n  }\n  /**\n   * @internal\n   */\n\n\n  async _adoptBackendNodeId(backendNodeId) {\n    const {\n      object\n    } = await this._client.send('DOM.resolveNode', {\n      backendNodeId: backendNodeId,\n      executionContextId: this._contextId\n    });\n    return (0, JSHandle_js_1.createJSHandle)(this, object);\n  }\n  /**\n   * @internal\n   */\n\n\n  async _adoptElementHandle(elementHandle) {\n    (0, assert_js_1.assert)(elementHandle.executionContext() !== this, 'Cannot adopt handle that already belongs to this execution context');\n    (0, assert_js_1.assert)(this._world, 'Cannot adopt handle without DOMWorld');\n    const nodeInfo = await this._client.send('DOM.describeNode', {\n      objectId: elementHandle._remoteObject.objectId\n    });\n    return this._adoptBackendNodeId(nodeInfo.node.backendNodeId);\n  }\n\n}\n\nexports.ExecutionContext = ExecutionContext;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;AAgBA;;AACA;;AACA;AAMA;;;;;AAGaA,gCAAwB,iCAAxB;AACb,MAAMC,gBAAgB,GAAG,6CAAzB;AAEA;;;;;;;;;;;;;;;;;;AAiBA,MAAaC,gBAAb,CAA6B;EAkB3B;;;EAGAC,YACEC,MADF,EAEEC,cAFF,EAGEC,KAHF,EAGiB;IAEf,KAAKC,OAAL,GAAeH,MAAf;IACA,KAAKI,MAAL,GAAcF,KAAd;IACA,KAAKG,UAAL,GAAkBJ,cAAc,CAACK,EAAjC;IACA,KAAKC,YAAL,GAAoBN,cAAc,CAACO,IAAnC;EACD;EAED;;;;;;;;;;;EASAC,KAAK;IACH,OAAO,KAAKL,MAAL,GAAc,KAAKA,MAAL,CAAYK,KAAZ,EAAd,GAAoC,IAA3C;EACD;EAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2Cc,MAARC,QAAQ,CACZC,YADY,EAEM;IAAA,kCAAfC,IAAe;MAAfA,IAAe;IAAA;;IAElB,OAAO,MAAM,KAAKC,iBAAL,CACX,IADW,EAEXF,YAFW,EAGX,GAAGC,IAHQ,CAAb;EAKD;EAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0CoB,MAAdE,cAAc,CAClBH,YADkB,EAEe;IAAA,mCAA9BC,IAA8B;MAA9BA,IAA8B;IAAA;;IAEjC,OAAO,KAAKC,iBAAL,CAAmC,KAAnC,EAA0CF,YAA1C,EAAwD,GAAGC,IAA3D,CAAP;EACD;;EAE8B,MAAjBC,iBAAiB,CAC7BE,aAD6B,EAE7BJ,YAF6B,EAGX;IAElB,MAAMK,MAAM,GAAG,iBAAiBpB,6BAAqB,EAArD;;IAEA,IAAIqB,mBAAOC,QAAP,CAAgBP,YAAhB,CAAJ,EAAmC;MACjC,MAAMQ,SAAS,GAAG,KAAKd,UAAvB;MACA,MAAMe,UAAU,GAAGT,YAAnB;MACA,MAAMU,uBAAuB,GAAGxB,gBAAgB,CAACyB,IAAjB,CAAsBF,UAAtB,IAC5BA,UAD4B,GAE5BA,UAAU,GAAG,IAAb,GAAoBJ,MAFxB;MAIA,MAAM;QAAEO,gBAAF;QAAoBC,MAAM,EAAEC;MAA5B,IAA6C,MAAM,KAAKtB,OAAL,CACtDuB,IADsD,CACjD,kBADiD,EAC7B;QACxBN,UAAU,EAAEC,uBADY;QAExBF,SAFwB;QAGxBJ,aAHwB;QAIxBY,YAAY,EAAE,IAJU;QAKxBC,WAAW,EAAE;MALW,CAD6B,EAQtDC,KARsD,CAQhDC,YARgD,CAAzD;MAUA,IAAIP,gBAAJ,EACE,MAAM,IAAIQ,KAAJ,CACJ,wBAAwBd,mBAAOe,mBAAP,CAA2BT,gBAA3B,CADpB,CAAN;MAIF,OAAOR,aAAa,GAChBE,mBAAOgB,qBAAP,CAA6BR,YAA7B,CADgB,GAEhB,kCAAe,IAAf,EAAqBA,YAArB,CAFJ;IAGD;;IAED,IAAI,OAAOd,YAAP,KAAwB,UAA5B,EACE,MAAM,IAAIoB,KAAJ,CACJ,0EAA0EpB,YAAY,YADlF,CAAN;IAIF,IAAIuB,YAAY,GAAGvB,YAAY,CAACwB,QAAb,EAAnB;;IACA,IAAI;MACF,IAAIC,QAAJ,CAAa,MAAMF,YAAN,GAAqB,GAAlC;IACD,CAFD,CAEE,OAAOG,KAAP,EAAc;MACd;MACA;MACA,IAAIH,YAAY,CAACI,UAAb,CAAwB,QAAxB,CAAJ,EACEJ,YAAY,GACV,oBAAoBA,YAAY,CAACK,SAAb,CAAuB,SAASC,MAAhC,CADtB,CADF,KAGKN,YAAY,GAAG,cAAcA,YAA7B;;MACL,IAAI;QACF,IAAIE,QAAJ,CAAa,MAAMF,YAAN,GAAqB,GAAlC;MACD,CAFD,CAEE,OAAOG,KAAP,EAAc;QACd;QACA,MAAM,IAAIN,KAAJ,CAAU,2CAAV,CAAN;MACD;IACF;;IACD,IAAIU,qBAAJ;;IACA,IAAI;MAAA,mCAtDD7B,IAsDC;QAtDDA,IAsDC;MAAA;;MACF6B,qBAAqB,GAAG,KAAKtC,OAAL,CAAauB,IAAb,CAAkB,wBAAlB,EAA4C;QAClEgB,mBAAmB,EAAER,YAAY,GAAG,IAAf,GAAsBlB,MAAtB,GAA+B,IADc;QAElE2B,kBAAkB,EAAE,KAAKtC,UAFyC;QAGlEuC,SAAS,EAAEhC,IAAI,CAACiC,GAAL,CAASC,eAAe,CAACC,IAAhB,CAAqB,IAArB,CAAT,CAHuD;QAIlEhC,aAJkE;QAKlEY,YAAY,EAAE,IALoD;QAMlEC,WAAW,EAAE;MANqD,CAA5C,CAAxB;IAQD,CATD,CASE,OAAOS,KAAP,EAAc;MACd,IACEA,KAAK,YAAYW,SAAjB,IACAX,KAAK,CAACY,OAAN,CAAcX,UAAd,CAAyB,uCAAzB,CAFF,EAIED,KAAK,CAACY,OAAN,IAAiB,qCAAjB;MACF,MAAMZ,KAAN;IACD;;IACD,MAAM;MAAEd,gBAAF;MAAoBC,MAAM,EAAEC;IAA5B,IACJ,MAAMgB,qBAAqB,CAACZ,KAAtB,CAA4BC,YAA5B,CADR;IAEA,IAAIP,gBAAJ,EACE,MAAM,IAAIQ,KAAJ,CACJ,wBAAwBd,mBAAOe,mBAAP,CAA2BT,gBAA3B,CADpB,CAAN;IAGF,OAAOR,aAAa,GAChBE,mBAAOgB,qBAAP,CAA6BR,YAA7B,CADgB,GAEhB,kCAAe,IAAf,EAAqBA,YAArB,CAFJ;IAIA;;;;;;IAKA,SAASqB,eAAT,CAAiDI,GAAjD,EAA6D;MAC3D,IAAI,OAAOA,GAAP,KAAe,QAAnB,EACE;QACA,OAAO;UAAEC,mBAAmB,EAAE,GAAGD,GAAG,CAACf,QAAJ,EAAc;QAAxC,CAAP;MACF,IAAIiB,MAAM,CAACC,EAAP,CAAUH,GAAV,EAAe,CAAC,CAAhB,CAAJ,EAAwB,OAAO;QAAEC,mBAAmB,EAAE;MAAvB,CAAP;MACxB,IAAIC,MAAM,CAACC,EAAP,CAAUH,GAAV,EAAeI,QAAf,CAAJ,EAA8B,OAAO;QAAEH,mBAAmB,EAAE;MAAvB,CAAP;MAC9B,IAAIC,MAAM,CAACC,EAAP,CAAUH,GAAV,EAAe,CAACI,QAAhB,CAAJ,EACE,OAAO;QAAEH,mBAAmB,EAAE;MAAvB,CAAP;MACF,IAAIC,MAAM,CAACC,EAAP,CAAUH,GAAV,EAAeK,GAAf,CAAJ,EAAyB,OAAO;QAAEJ,mBAAmB,EAAE;MAAvB,CAAP;MACzB,MAAMK,YAAY,GAAGN,GAAG,IAAIA,GAAG,YAAYO,sBAAtB,GAAiCP,GAAjC,GAAuC,IAA5D;;MACA,IAAIM,YAAJ,EAAkB;QAChB,IAAIA,YAAY,CAACE,QAAb,KAA0B,IAA9B,EACE,MAAM,IAAI3B,KAAJ,CACJ,mEADI,CAAN;QAGF,IAAIyB,YAAY,CAACG,SAAjB,EAA4B,MAAM,IAAI5B,KAAJ,CAAU,uBAAV,CAAN;QAC5B,IAAIyB,YAAY,CAACI,aAAb,CAA2BT,mBAA/B,EACE,OAAO;UACLA,mBAAmB,EAAEK,YAAY,CAACI,aAAb,CAA2BT;QAD3C,CAAP;QAGF,IAAI,CAACK,YAAY,CAACI,aAAb,CAA2BC,QAAhC,EACE,OAAO;UAAEC,KAAK,EAAEN,YAAY,CAACI,aAAb,CAA2BE;QAApC,CAAP;QACF,OAAO;UAAED,QAAQ,EAAEL,YAAY,CAACI,aAAb,CAA2BC;QAAvC,CAAP;MACD;;MACD,OAAO;QAAEC,KAAK,EAAEZ;MAAT,CAAP;IACD;;IAED,SAASpB,YAAT,CAAsBO,KAAtB,EAAkC;MAChC,IAAIA,KAAK,CAACY,OAAN,CAAcc,QAAd,CAAuB,oCAAvB,CAAJ,EACE,OAAO;QAAEvC,MAAM,EAAE;UAAEwC,IAAI,EAAE;QAAR;MAAV,CAAP;MACF,IAAI3B,KAAK,CAACY,OAAN,CAAcc,QAAd,CAAuB,sCAAvB,CAAJ,EACE,OAAO;QAAEvC,MAAM,EAAE;UAAEwC,IAAI,EAAE;QAAR;MAAV,CAAP;MAEF,IACE3B,KAAK,CAACY,OAAN,CAAcgB,QAAd,CAAuB,uCAAvB,KACA5B,KAAK,CAACY,OAAN,CAAcgB,QAAd,CAAuB,sCAAvB,CAFF,EAIE,MAAM,IAAIlC,KAAJ,CACJ,uEADI,CAAN;MAGF,MAAMM,KAAN;IACD;EACF;EAED;;;;;;;;;;;;;;;;;;;;;;;;EAsBkB,MAAZ6B,YAAY,CAACC,eAAD,EAA0B;IAC1C,wBAAO,CAACA,eAAe,CAACR,SAAxB,EAAmC,iCAAnC;IACA,wBACEQ,eAAe,CAACP,aAAhB,CAA8BC,QADhC,EAEE,4DAFF;IAIA,MAAMO,QAAQ,GAAG,MAAM,KAAKjE,OAAL,CAAauB,IAAb,CAAkB,sBAAlB,EAA0C;MAC/D2C,iBAAiB,EAAEF,eAAe,CAACP,aAAhB,CAA8BC;IADc,CAA1C,CAAvB;IAGA,OAAO,kCAAe,IAAf,EAAqBO,QAAQ,CAACE,OAA9B,CAAP;EACD;EAED;;;;;EAGyB,MAAnBC,mBAAmB,CACvBC,aADuB,EACkB;IAEzC,MAAM;MAAEC;IAAF,IAAa,MAAM,KAAKtE,OAAL,CAAauB,IAAb,CAAkB,iBAAlB,EAAqC;MAC5D8C,aAAa,EAAEA,aAD6C;MAE5D7B,kBAAkB,EAAE,KAAKtC;IAFmC,CAArC,CAAzB;IAIA,OAAO,kCAAe,IAAf,EAAqBoE,MAArB,CAAP;EACD;EAED;;;;;EAGyB,MAAnBC,mBAAmB,CACvBC,aADuB,EACK;IAE5B,wBACEA,aAAa,CAACC,gBAAd,OAAqC,IADvC,EAEE,oEAFF;IAIA,wBAAO,KAAKxE,MAAZ,EAAoB,sCAApB;IACA,MAAMyE,QAAQ,GAAG,MAAM,KAAK1E,OAAL,CAAauB,IAAb,CAAkB,kBAAlB,EAAsC;MAC3DmC,QAAQ,EAAEc,aAAa,CAACf,aAAd,CAA4BC;IADqB,CAAtC,CAAvB;IAGA,OAAO,KAAKU,mBAAL,CAAyBM,QAAQ,CAACC,IAAT,CAAcN,aAAvC,CAAP;EACD;;AAvV0B;;AAA7B5E","names":["exports","SOURCE_URL_REGEX","ExecutionContext","constructor","client","contextPayload","world","_client","_world","_contextId","id","_contextName","name","frame","evaluate","pageFunction","args","_evaluateInternal","evaluateHandle","returnByValue","suffix","helper_js_1","isString","contextId","expression","expressionWithSourceUrl","test","exceptionDetails","result","remoteObject","send","awaitPromise","userGesture","catch","rewriteError","Error","getExceptionMessage","valueFromRemoteObject","functionText","toString","Function","error","startsWith","substring","length","callFunctionOnPromise","functionDeclaration","executionContextId","arguments","map","convertArgument","bind","TypeError","message","arg","unserializableValue","Object","is","Infinity","NaN","objectHandle","JSHandle_js_1","_context","_disposed","_remoteObject","objectId","value","includes","type","endsWith","queryObjects","prototypeHandle","response","prototypeObjectId","objects","_adoptBackendNodeId","backendNodeId","object","_adoptElementHandle","elementHandle","executionContext","nodeInfo","node"],"sources":["../../../../src/common/ExecutionContext.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}