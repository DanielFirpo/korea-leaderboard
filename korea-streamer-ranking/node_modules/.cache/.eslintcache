[{"C:\\Users\\DF\\Documents\\GitHub\\KoreaStreamerRanking\\korea-leaderboard\\korea-streamer-ranking\\src\\index.js":"1","C:\\Users\\DF\\Documents\\GitHub\\KoreaStreamerRanking\\korea-leaderboard\\korea-streamer-ranking\\src\\App.js":"2","C:\\Users\\DF\\Documents\\GitHub\\KoreaStreamerRanking\\korea-leaderboard\\korea-streamer-ranking\\src\\reportWebVitals.js":"3","C:\\Users\\DF\\Documents\\GitHub\\KoreaStreamerRanking\\korea-leaderboard\\korea-streamer-ranking\\src\\RankingList.js":"4","C:\\Users\\DF\\Documents\\GitHub\\KoreaStreamerRanking\\korea-leaderboard\\korea-streamer-ranking\\src\\RankingListItem.js":"5"},{"size":535,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":278,"mtime":1651884345286,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3254,"mtime":1652151131276,"results":"10","hashOfConfig":"7"},{"size":711,"mtime":1651890136864,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"jhbuof",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"C:\\Users\\DF\\Documents\\GitHub\\KoreaStreamerRanking\\korea-leaderboard\\korea-streamer-ranking\\src\\index.js",[],[],[],"C:\\Users\\DF\\Documents\\GitHub\\KoreaStreamerRanking\\korea-leaderboard\\korea-streamer-ranking\\src\\App.js",[],[],"C:\\Users\\DF\\Documents\\GitHub\\KoreaStreamerRanking\\korea-leaderboard\\korea-streamer-ranking\\src\\reportWebVitals.js",[],[],"C:\\Users\\DF\\Documents\\GitHub\\KoreaStreamerRanking\\korea-leaderboard\\korea-streamer-ranking\\src\\RankingList.js",["29"],[],"import React, { useEffect, useState } from 'react';\r\nimport RankingListItem from './RankingListItem';\r\n\r\nfunction RankingList() {\r\n\r\n    const [streamerData, setStreamerData] = useState([]);\r\n\r\n    const StreamerData = class {\r\n        streamerName = \"\";\r\n        accountName = \"\";\r\n        rankName = \"\";\r\n        ladderRank = \"\";\r\n        totalWins = 0;\r\n        totalLosses = 0;\r\n        constructor(streamerName, accountName, rankName, ladderRank, totalWins, totalLosses) {\r\n            this.streamerName = streamerName;\r\n            this.accountName = accountName;\r\n            this.rankName = rankName;\r\n            this.ladderRank = ladderRank;\r\n            this.totalWins = totalWins;\r\n            this.totalLosses = totalLosses;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // //to do: scrape account data from opgg for each streamer in STREAMERS\r\n        // scrapeData(STREAMERS);\r\n\r\n        // //for now some sample data:\r\n        // let exampleData = [new StreamerData(\"LolTyler1\", \"loltyler1\", \"Gold\", 1923898, 0, 200), new StreamerData(\"TF Blade\", \"TF Bladeee\", \"Challenger\", 1, 200, 200)];\r\n        // console.log(\"ecample data\", exampleData)\r\n        // let sortedExampleData = exampleData.sort((a, b) => { return a.ladderRank < b.ladderRank ? -1 : 1 });\r\n        // console.log(\"ecample data sorted\", sortedExampleData)\r\n        // setStreamerData(sortedExampleData);\r\n\r\n        getStreamerData();\r\n\r\n    }, []);\r\n\r\n    function getStreamerData() {\r\n        fetch(process.env.REACT_APP_BACKEND_URL + `/streamerData`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(\"sucessfully got streamer data\", data)\r\n                let newStreamerDataArray = [];\r\n                data.forEach(streamer => {\r\n                    newStreamerDataArray.push(new StreamerData(streamer.streamerName, streamer.accountName, `${streamer.rankName} ${streamer.lp} LP`, streamer.ladderRank, streamer.totalWins, streamer.totalLosses))\r\n                });\r\n                setStreamerData(newStreamerDataArray);\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error fetching streamer data.\", error)\r\n            })\r\n\r\n        //get data again every minute\r\n        setTimeout(() => { getStreamerData() }, 60000)\r\n    }\r\n\r\n    return (\r\n        <div id=\"RankingList\">\r\n            <div id='RankingListHeader'><div></div><div>Streamer</div><div>League Account</div><div>Rank</div><div>Ladder Rank</div><div>Wins</div><div>Losses</div></div>\r\n            <div id=\"StreamerTable\">\r\n                {\r\n                    streamerData.sort((a, b) => { return a.ladderRank < b.ladderRank ? -1 : 1 }).map((streamer, index) => {\r\n                        console.log(\"number \", index, \"streamer with ladder rank\", streamer.ladderRank)\r\n                        return <RankingListItem listIndex={index + 1} streamerName={streamer.streamerName} accountName={streamer.accountName}\r\n                            rankName={streamer.rankName} ladderRank={streamer.ladderRank} totalWins={streamer.totalWins} totalLosses={streamer.totalLosses}></RankingListItem>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RankingList;\r\n","C:\\Users\\DF\\Documents\\GitHub\\KoreaStreamerRanking\\korea-leaderboard\\korea-streamer-ranking\\src\\RankingListItem.js",[],[],{"ruleId":"30","severity":1,"message":"31","line":38,"column":8,"nodeType":"32","endLine":38,"endColumn":10,"suggestions":"33"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStreamerData'. Either include it or remove the dependency array.","ArrayExpression",["34"],{"desc":"35","fix":"36"},"Update the dependencies array to be: [getStreamerData]",{"range":"37","text":"38"},[1432,1434],"[getStreamerData]"]